{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PowBot - The best mobile botting client.","text":"<ul> <li> <p> Get Started</p> <p>Find guides for installing PowBot on emulators/real devices, using proxies and more!</p> <p> Getting started</p> </li> <li> <p> Create your own scripts</p> <p>We provide you with a sleek and simple API. Learn how to use it to create your own scripts!</p> <p> Development</p> </li> <li> <p> Have questions?</p> <p>Our FAQ page covers the most common questions you may have as well as troubleshooting steps.</p> <p> Help &amp; Support</p> </li> </ul>"},{"location":"#join-our-community","title":"Join Our Community","text":"<p>Our home is on Discord. Join us to get manage your account, get help, and see more of what PowBot has to offer.</p>"},{"location":"#additional-resources","title":"Additional Resources","text":"<ul> <li>API JDocs</li> <li>Powbot Store</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! If you'd like to contribute to this site, create a pull request with your changes to our GitHub repository.</p>"},{"location":"Scripts/","title":"Available Scripts","text":""},{"location":"Development/SettingUpDevelopmentEnv/","title":"Setting up your development environment","text":""},{"location":"Development/SettingUpDevelopmentEnv/#step-0-pre-requisites","title":"Step 0 - Pre-requisites","text":"<ul> <li>Basic knowledge of Git, PowBot API, and Intellij IDEA  </li> <li>Basic knowledge of the Gradle build system (https://www.tutorialspoint.com/gradle/index.htm)</li> </ul>"},{"location":"Development/SettingUpDevelopmentEnv/#step-1-creating-a-new-project","title":"Step 1 - Creating a new project","text":"<p>Create a new project in Intellij IDEA. Make sure to select the options outlined below. </p> <p></p> <p>After clicking on 'Create', wait until all background tasks are finished in the bottom right corner.</p> <p></p>"},{"location":"Development/SettingUpDevelopmentEnv/#step-2-modifying-the-gradle-build-configs","title":"Step 2 - Modifying the gradle build configs","text":"<p>To auto import all needed libraries, overwrite everything in the <code>gradle.build.kts</code> with the text below</p> <pre><code>plugins {\n    id 'java' // Alternative id(\"java\")\n    id \"org.jetbrains.kotlin.jvm\" version \"1.5.21\" // Alternative id(\"org.jetbrains.kotlin.jvm\") version \"1.5.21\"\n}\n\ngroup 'org.proto' // If failing, alternatively use \"\"\nversion '1.0-SNAPSHOT'\n\nrepositories {\n    mavenCentral()\n    google()\n    maven {\n        url = uri(\"https://repo.powbot.org/releases\")\n    }\n}\n\n// If failing, alternatively use \"\"\ndependencies {\n    implementation('org.powbot:client-sdk:1.+') // + means gradle will pull the latest libs on refresh of project\n    implementation('org.powbot:client-sdk-loader:1.+') \n    implementation('com.google.guava:guava:31.1-jre') // needed for @Subscribe annotations / event bus  \n    implementation('com.fasterxml.jackson.core:jackson-core:2.13.0')\n}\n</code></pre> <p>Make sure to refresh the gradle configs by either clicking on the little button that comes up on the top right of your screen, or by going to the gradle tab and clicking on the icon.</p> <p> </p>"},{"location":"Development/SettingUpDevelopmentEnv/#step-3-start-making-your-script","title":"Step 3 - Start making your script!","text":"<p>You can now start working on your script, everything should be held in the <code>src/main/java/org/example/</code> path.</p> <p></p>"},{"location":"Development/SettingUpDevelopmentEnv/#example-repo","title":"Example repo","text":"<p>https://github.com/Protoprize/PowBot-Base-Gradle-Project</p>"},{"location":"Development/API/BankAPI/","title":"Bank API","text":"<p>The Bank API allows you to interact with the Bank within OSRS, it handles everything from opening the bank to interacting with items within the bank.</p>"},{"location":"Development/API/BankAPI/#bank-tab","title":"Bank Tab","text":"<p>To retrieve the current tab of the bank you can use the <code>currentTab</code> function which will return an integer value of the current tab open in the bank.</p> <pre><code>int currentOpenTab = Bank.currentTab();\n</code></pre> <p>To open a specific tab in the bank you can pass the index of the tab to the <code>currentTab</code> function like so</p> <pre><code>if (Bank.currentTab(4)) {\n\n}\n</code></pre>"},{"location":"Development/API/BankAPI/#depositing","title":"Depositing","text":"<p>There are multiple functions to provide support for depositing items into the bank.</p>"},{"location":"Development/API/BankAPI/#using-item-ids","title":"Using Item Ids","text":"<pre><code>int itemId = 1;\nint amountToDeposit = 12;\nBank.deposit(itemId, amountToDeposit);\n</code></pre> <pre><code>int itemId = 1;\nBank.deposit(itemId, Bank.Amount.ALL)\n</code></pre>"},{"location":"Development/API/BankAPI/#using-item-strings","title":"Using Item Strings","text":"<pre><code>String itemName = \"Ring of recoil\";\nint amountToDeposit = 12;\nBank.deposit(itemName, amountToDeposit);\n</code></pre> <pre><code>String itemName = \"Ring of recoil\";\nint amountToDeposit = 12;\nBank.deposit(itemName, Bank.Amount.ALL);\n</code></pre>"},{"location":"Development/API/BankAPI/#depositing-with-exceptions","title":"Depositing with exceptions","text":"<p>Sometimes you may want to deposit all items except for a specific item e.g a pickaxe when you're mining. The Bank API offers a function called <code>depositAllExcept()</code> that does exactly this.</p> <p><pre><code>Bank.depositAllExcept(\"item1\", \"item2\", \"item3\");\n</code></pre> <pre><code>int id1 = 122;\nint id2 = 145;\nint id3 = 198;\n\nBank.depositAllExcept(id1, id2, id3);\n</code></pre></p>"},{"location":"Development/API/BankAPI/#checking-if-the-bank-is-in-the-viewport","title":"Checking if the bank is in the viewport","text":"<p>Before interacting with the bank you check if the bank is in the current viewport you can do this by calling the <code>inViewport</code> function.</p> <pre><code>if (Bank.inViewport()) {\n    //Do something with the viewport\n}\n</code></pre>"},{"location":"Development/API/BankAPI/#opening-the-bank","title":"Opening the bank","text":"<p>To open a bank you need to check if the Bank is in the viewport and then call <code>Bank.open()</code> to open the bank.</p> <pre><code>if (Bank.inViewport()) {\n    Condition.wait(() -&gt; Bank.open(), 50, 10);\n}\n</code></pre>"},{"location":"Development/API/BankAPI/#retrieving-the-nearest-bank","title":"Retrieving the nearest bank","text":"<p>To get the nearest bank you can call <code>Bank.nearest()</code> however the bank must be loaded for this to work, so if you're in a cave <code>Bank.nearest()</code> will return null. <code>Bank.nearest()</code> returns a Locatable type if a bank can be found.</p> <pre><code>Locatable nearestBank = Bank.nearest();\n</code></pre>"},{"location":"Development/API/BankAPI/#checking-if-the-bank-is-open","title":"Checking if the bank is open","text":"<p>Before interacting with the items in your bank you will want to check if the bank is open you can do this by calling <code>Bank.opened()</code></p> <pre><code>Boolean bankIsOpen = Bank.opened();\n</code></pre>"},{"location":"Development/API/BankAPI/#withdrawing-from-the-bank","title":"Withdrawing from the bank","text":"<p>Withdrawing from the bank is a similar process to depositing to the bank</p>"},{"location":"Development/API/BankAPI/#using-item-ids_1","title":"Using Item Ids","text":"<pre><code>int itemId = 1;\nint amountToDeposit = 12;\nBank.withdraw(itemId, amountToDeposit);\n</code></pre> <pre><code>int itemId = 1;\nBank.withdraw(itemId, Bank.Amount.ALL)\n</code></pre>"},{"location":"Development/API/BankAPI/#using-item-strings_1","title":"Using Item Strings","text":"<pre><code>String itemName = \"Ring of recoil\";\nint amountToDeposit = 12;\nBank.withdraw(itemName, amountToDeposit);\n</code></pre> <pre><code>String itemName = \"Ring of recoil\";\nint amountToDeposit = 12;\nBank.withdraw(itemName, Bank.Amount.ALL);\n</code></pre>"},{"location":"Development/API/ChatAPI/","title":"Chat API","text":"<p>The Chat API allows you to navigate chatting with NPCs within OSRS.</p>"},{"location":"Development/API/ChatAPI/#check-whether-youre-chatting","title":"Check whether you're chatting","text":"<p>To check whether there is a chat window open you can call the <code>Chat.chatting()</code> function as shown below.</p> <pre><code>if (Chat.chatting()) {\n    val npcName = Chatting.getChattingName()\n    println(\"We are chatting to ${npcName}\")\n}\n</code></pre>"},{"location":"Development/API/ChatAPI/#continuing-a-conversation","title":"Continuing a conversation","text":"<p>If you want to continue a conversation there are two ways of doing this depending on the situation whether you need to press 'Click to continue' or send an option response.</p> <p>If you want to just continue the conversation use the <code>clickContinue</code> function as shown below</p> <pre><code>if (Chat.canContinue()) {\n    if (Chat.continueChat()) {\n        Condiiton.wait(() -&gt; !Chat.canContinue(), 300, 10)\n    }\n}\n</code></pre> <p>if you want to continue the conversation with a specific response you can do so as shown below</p> <pre><code>if (Chat.canContinue()) {\n    if(Chat.continueChat(\"Yes I will do that.\")) {\n        Condition.wait(() -&gt; !Chat.canContinue(), 300, 10)\n    }\n}\n</code></pre>"},{"location":"Development/API/ChatAPI/#get-the-content-of-the-current-chat-message","title":"Get the content of the current chat message","text":"<pre><code>if (Chat.chatting()) {\n    String message = Chat.getChatMessage()\n}\n</code></pre>"},{"location":"Development/API/ChatAPI/#automating-a-conversation","title":"Automating a conversation","text":"<p>The Powbot API has a handy method for automating the entire conversation with an NPC. You pass the responses you want to give to the NPC as a parameter and the <code>Chat.completeChat</code> method will handle all the input and necessary delays for you.</p> <pre><code>if (Chat.chatting()) {\n    if (Chat.completeChat(*arrayOf(\"Yes\", \"I can help you\", \"Yes I'm fiunished talking\"))) {\n        Condition.wait(() -&gt; !Chat.chatting(), 500, 10)\n    }\n}\n</code></pre>"},{"location":"Development/API/Combat/","title":"Combat API","text":""},{"location":"Development/API/Combat/#enabling-autoretaliate","title":"Enabling Autoretaliate","text":"<p>The autoRetaliate method is used to enable or disable the auto retaliate feature in combat. It accepts a boolean parameter, where true turns on auto retaliate and false turns it off. It returns a boolean indicating whether the operation was successful. The autoretaliate function will handle the tab selection for you.</p> <pre><code>boolean setAutoRetaliate = Combat.autoRetaliate(true);\nif(setAutoRetaliate){\n    System.out.println(\"Auto retaliate set successfully\");\n}else{\n    System.out.println(\"Failed to set auto retaliate\");\n}\n</code></pre>"},{"location":"Development/API/Combat/#retrieving-the-wilderness-level","title":"Retrieving the wilderness level","text":"<p>The wildernessLevel method returns the wilderness level of the player, which is -1 if the player is not in the wilderness.</p> <pre><code>int wildernessLevel = Combat.wildernessLevel();\nif(wildernessLevel != -1){\n    System.out.println(\"The player is in the Wilderness at level \" + wildernessLevel);\n} else {\n    System.out.println(\"The player is not in the Wilderness.\");\n}\n</code></pre>"},{"location":"Development/API/Combat/#getting-the-current-combat-style","title":"Getting the current combat style","text":"<p>The Style enum is used to represent different combat styles. Options include ACCURATE, AGGRESSIVE, CONTROLLED, and DEFENSIVE.</p> <pre><code>Combat.Style currentStyle = Combat.style();\nSystem.out.println(\"Current combat style: \" + currentStyle);\n</code></pre>"},{"location":"Development/API/Combat/#setting-your-combat-style","title":"Setting your Combat style","text":"<p>The <code>style()</code> function takes a Combat.Style enum as a parameter the available options are</p> <ul> <li>DEFENSIVE</li> <li>AGGRESSIVE</li> <li>ACCURATE</li> <li>CONTROLLED</li> </ul> <pre><code>boolean setStyle = Combat.style(Combat.Style.ACCURATE);\nif(setStyle){\n    System.out.println(\"Combat style set successfully\");\n}else{\n    System.out.println(\"Failed to set combat style\");\n}\n</code></pre>"},{"location":"Development/API/Combat/#getting-your-health-percentage","title":"Getting your health percentage","text":"<pre><code>int healthPercent = Combat.healthPercent();\nSystem.out.println(\"Player health percent: \"+ healthPercent);\n</code></pre>"},{"location":"Development/API/Combat/#get-the-players-max-hp","title":"Get the players max HP","text":"<p>The maxHealth method returns the maximum health level of the player. Here is how you can use it:</p> <pre><code>int maxHealth = Combat.maxHealth();\nSystem.out.println(\"Player max health: \" + maxHealth);\n</code></pre>"},{"location":"Development/API/Combat/#checking-and-using-special-attacks","title":"Checking and using special attacks","text":"<pre><code>boolean hasSpecialAttack = Combat.specialAttack();\nif (hasSpecialAttack) {\n    boolean setSpecialAttack = Combat.specialAttack(true);\n    if (setSpecialAttack){\n        System.out.println(\"Special attack set successfully\");\n    }else{\n        System.out.println(\"Failed to set special attack\");\n    }\n}\n</code></pre>"},{"location":"Development/API/Combat/#checking-special-percentage","title":"Checking special percentage","text":"<p>The specialPercentage method returns the current percentage of the player's special attack energy.</p> <pre><code>int specialPercentage = Combat.specialPercentage();\nSystem.out.println(\"Special attack energy percentage: \" + specialPercentage + \"%\");\n</code></pre>"},{"location":"Development/API/Combat/#check-if-youre-in-a-multi-combat-zone","title":"Check if you're in a multi-combat zone","text":"<p>The inMultiCombat method returns true if the player is in a multi-combat zone, and false otherwise. </p> <pre><code>boolean inMultiCombat = Combat.inMultiCombat();\nif (inMultiCombat){\n    System.out.println(\"Player is in multi-combat zone\");\n}else{\n    System.out.println(\"Player is not in multi-combat zone\");\n}\n</code></pre>"},{"location":"Development/API/EquipmentAPI/","title":"Equipment API","text":""},{"location":"Development/API/EquipmentAPI/#check-if-the-equipment-tab-is-open","title":"Check if the equipment tab is open","text":"<pre><code>boolean equipmentOpened = Equipment.opened();\nSystem.out.println(\"Equipment open? \" + equipmentOpened);\n</code></pre>"},{"location":"Development/API/EquipmentAPI/#open-the-equipment-tab","title":"Open the equipment tab","text":"<p>The <code>open()</code> function attempts to open the equipment tab. If successful it will return <code>true</code> else <code>false</code></p> <pre><code>if (!Equipment.opened()) {\n    if (Equipment.open()) {\n        Condition.wait(() -&gt; Equipment.opened(), 300, 10)\n    }\n}\n</code></pre>"},{"location":"Development/API/EquipmentAPI/#getting-an-item-at-a-specific-slot","title":"Getting an item at a specific slot","text":"<p>The <code>itemAt(Slot)</code> function returns an instance of Item. If there is no item a the slot it will return a Nil instance of the Item object. </p> <pre><code>Item item = Equipment.itemAt(Equipment.Slot.HEAD);\nif (item != Item.Nil) {\n    System.out.println(\"Item found was \" + item.name());\n}\n</code></pre>"},{"location":"Development/API/EquipmentAPI/#available-equipment-slots","title":"Available equipment slots","text":"<ul> <li><code>HEAD</code></li> <li><code>CAPE</code></li> <li><code>NECK</code></li> <li><code>TORSO</code></li> <li><code>LEGS</code></li> <li><code>HANDS</code></li> <li><code>FEET</code></li> <li><code>RING</code></li> <li><code>QUIVER</code></li> </ul>"},{"location":"Development/API/Events/","title":"Events","text":"<p>Events are dispatched both as a result of in game event changes and client event changes. The list of events currently supported are:</p> <ul> <li>BreakEvent</li> <li>Called 5 seconds before a break is about to start, you can delay a break by calling <code>event.delay(millis)</code>.</li> <li>Called whenever you perform an ingame action</li> <li>BreakEndedEvent</li> <li>Called whenever a break has ended.</li> <li>InventoryChangeEvent</li> <li>Called whenever your players inventory changes</li> <li>KeyEvent</li> <li>Called whenever a key is pressed/released on the keyboard</li> <li>MessageEvent</li> <li>Called whenever an ingame message is received</li> <li>RenderEvent</li> <li>Called during the client rendering loop, you can do custom drawing on the screen here</li> <li>SkillExpGainedEvent</li> <li>Called whenever you gain exp in any skill  </li> <li>SkillLevelUpEvent</li> <li>Called whenever you gain a level in any skill </li> <li>TickEvent</li> <li>Called every game tick (roughly 600ms)</li> <li>TouchEvent</li> <li>Called whenever a touch press/drag/release occurs</li> <li>VarpbitChangedEvent </li> <li>Called whenever a varpbit changes in game</li> <li>PaintCheckboxChangedEvent</li> <li>Called whenever someone toggles a checkbox in a paint, has the current checked value and the id of the checkbox.</li> <li>NpcAnimationChangedEvent</li> <li>Called whenever a loaded npc animation changes</li> <li>PlayerAnimationChangedEvent</li> <li>Called whenever a loaded players animation changes</li> </ul> <p>You can also click here to see the relevant java docs.</p> <p>It is very important that any methods you have which subscribe to events don't have any blocking logic and execute fast. Having code like <code>Condition.wait { !Players.local().isIdle() }</code> will cause the client to not function correctly, methods which handle events should just be used to update state rather than perform any interactions/sleeps.</p>"},{"location":"Development/API/Events/#subscribing-to-an-event","title":"Subscribing to an event","text":"<p>Subscribing to an event is simple, you just need to annotate a method which takes the event you wish to subscribe to with the <code>@Subscribe</code> annotation, for example:</p> <pre><code>    var returned = 0\n\n    @com.google.common.eventbus.Subscribe\n    fun onInventoryChange(change: InventoryChangeEvent) {\n        if (change.quantityChange &gt; 0 &amp;&amp; change.itemName == \"Book of arcane knowledge\") {\n            returned++\n        }\n    }\n</code></pre> <p>Placing this method inside the body of your main script class will work, however if you wish to place it in a different class you will need to register the instance of that class to the event bus by using <code>Events.register(obj)</code>. For example:</p> <pre><code>class SomeTask: Task {\n    var returned = 0\n\n    @com.google.common.eventbus.Subscribe\n    fun onInventoryChange(change: InventoryChangeEvent) {\n        if (change.quantityChange &gt; 0 &amp;&amp; change.itemName == \"Book of arcane knowledge\") {\n            returned++\n        }\n    }\n}\n\nclass MyScript: AbstractScript() {\n    val tasks = mutableListOf&lt;Task&gt;()\n\n    override fun onStart() {\n        val someTask = SomeTask()\n        tasks.add(someTask)\n        Events.register(someTask)\n    }\n}\n</code></pre>"},{"location":"Development/API/GrandExchangeAPI/","title":"Grand Exchange API","text":"<p>The Grand Exchange API is a new API that lets you interact with the Grand Exchange.</p>"},{"location":"Development/API/GrandExchangeAPI/#retrieving-item-prices","title":"Retrieving item prices","text":"<p>Retrieving item prices can be called from anywhere you do not need to be at the GrandExchange to retrieve an items price.</p> <p>Typically this would be called on the <code>onStart</code> function however if you need it to be updated at multiple times during the script run this may be better placed elsewhere.</p> <pre><code>@Override\npublic void onStart() {\n    int RING_OF_RECOIL_ID = 2550;\n    int ringOfRecoilPrice = GrandExchange.getItemPrice(RING_OF_RECOIL_ID);\n}\n</code></pre>"},{"location":"Development/API/GrandExchangeAPI/#opening-and-closing-the-grand-exchange","title":"Opening and closing the Grand Exchange","text":"<p>To open you need to call the <code>open()</code> function.</p> <pre><code>if (GrandExchange.open()) {\n    //Do something here\n}\n</code></pre> <p>and to check if the GrandExchange is open you can call the <code>opened()</code> function like so</p> <pre><code>Boolean grandExchangeOpened = GrandExchange.opened();\n</code></pre> <p>to close the GrandExchange it is as simple as calling the <code>close()</code> function</p> <pre><code>GrandExchange.close();\n</code></pre>"},{"location":"Development/API/GrandExchangeAPI/#buying-selling-items-on-the-grand-exchange","title":"Buying &amp; selling items on the grand exchange","text":"<p>Buying and selling items on the Grand Exchange is relatively simple and can be handled through the <code>createOffer</code> function. You can use the same function to buy or sell by passing a true or false respectively as the last parameter.</p> <pre><code>int quantity = 15;\nint price= 999;\nBoolean shouldBuy = false;\n\nGrandExchangeItem geItem = GrandExchangeItem.Companion.fromName(\"Bronze arrow\");\nGrandExchange.createOffer(geItem, quantity, price, shouldBuy);\n</code></pre>"},{"location":"Development/API/GrandExchangeAPI/#getting-your-grand-exchange-slots-and-checking-the-state-of-them","title":"Getting your Grand Exchange slots and checking the state of them","text":"<p>The Grand Exchange API offers a <code>allSlots()</code> function that returns an <code>ArrayList</code> of <code>GeSlot</code> you can then iterate through each slot and check the state of them as shown below</p> <pre><code>ArrayList&lt;GeSlot&gt; slots = GrandExchange.allSlots();\nslots.forEach(slot -&gt; {\n    if (slot.isAvailable()) {\n        System.out.println(\"Slot is available\");\n    }\n});\n</code></pre>"},{"location":"Development/API/GrandExchangeAPI/#collecting-offers","title":"Collecting offers","text":"<p>To collect an offer you need to call the <code>collectOffer</code> function which requires the Grand Exchange slot it is collection from. You can obtain the slot by iterating through the <code>allSlots()</code> return as shown below.</p> <pre><code>ArrayList&lt;GeSlot&gt; slots = GrandExchange.allSlots();\nslots.forEach(slot -&gt; {\n    if (slot.isFinished()) {\n        GrandExchange.collectOffer(slot, GrandExchange.CollectMode.Noted)\n    }\n});\n</code></pre>"},{"location":"Development/API/GrandExchangeAPI/#aborting-offers","title":"Aborting offers","text":"<p>Similary to collecting offers you require the Grand Exchange slot to be passed to <code>abortOffer</code> you can do this by iterating the result of the <code>allSlots()</code> function as shown below. </p> <pre><code>ArrayList&lt;GeSlot&gt; slots = GrandExchange.allSlots();\nslots.forEach(slot -&gt; {\n    if (!slot.isFinished() &amp;&amp; !slot.isAborted()) {\n        GrandExchange.abortOffer(slot)\n    }\n});\n</code></pre> <p>You should ensure you are not trying to abort an already aborted offer by checking <code>!slot.isAborted()</code> before attempting to abort.</p>"},{"location":"Development/API/GroundItems/","title":"Ground Items","text":"<p>A GroundIem is classified as anything that can be picked up from the floor into your inventory. These items are filterable to return the specific grounditem(s) that you want/need.</p> <p>GroundItems have properties associated with them, some of them are listed below. There are many others so feel free to take a look into what other properties are involved with grounditems.</p> <ul> <li> <p>ID (Integer) - This is the ID of the item, this is created by Jagex and is universal throughout all clients. For example, the ID for gold is 995.</p> </li> <li> <p>Name (String) - This is the name of the item.</p> </li> <li> <p>Tile (Tile) - This is the location in the game world in which the item sits on the floor, please see Locations.md for more information on tiles.</p> </li> <li> <p>Stacksize (Integer) - This is for stackable items, for example gold. If you withdraw 10 gold pieces, it sits in 1 inventory slot and stacksize will return 10.</p> </li> </ul> <p>To filter a grounditem you first need to return the stream, see the StreamAPI section for more info on this.</p> <p><pre><code>int GP_ID = 995;\nGroundItem gp = GroundItems.stream().id(GP_ID).first();\n</code></pre> In this scenario, we have cached the grounditem of coins from the floor.</p>"},{"location":"Development/API/Items/","title":"Inventory Items","text":"<p>An item is classified as anything in your inventory. These items are filterable to return the specific item(s) that you want/need.</p> <p>Items have properties associated with them, some of them are listed below. There are many others so feel free to take a look into what other properties are involved with items. * ID (Integer) - This is the ID of the item, this is created by Jagex and is universal throughout all clients. For example, the ID for gold is 995.</p> <ul> <li> <p>Name (String) - This is the name of the item.</p> </li> <li> <p>InventoryIndex (Integer) - This is the position in which the item sits in the inventory, for example, the first item in your inventory will be 0; this index runs from base 0 meaning it can be 0-27.</p> </li> <li> <p>Stacksize (Integer) - This is for stackable items, for example gold. If you withdraw 10 gold pieces, it sits in 1 inventory slot and stacksize will return 10.</p> </li> </ul> <p>To find items in your inventory, you need to stream them. The item stream is split up into the following segments 1. The where you want to look for the item (Bank, Equipment, Inventory). In our example, we're going to use an item in our inventory. 2. Any filters you want to narrow down your search for the item, for example, name() or id() 3. Get a single item result from your stream with first(). There are other options, for example firstOrNull(). first() is null safe and firstOrNull() as per the name isn't. Unless you're explicitly wanting to handle null values, stick with first().</p> <p><pre><code>int GP_ID = 995;\nItem gp = Inventory.stream().id(GP_ID).first();\n</code></pre> In the above example, we used Inventory.stream() to access the items in our inventory, used id(GP_ID) as our filter to narrow down our search and then used .first() to give us the first result in that stream of items matching our criteria.</p> <p>Below are some examples of what you can do with or use an 'Item' for.</p>"},{"location":"Development/API/Items/#eating-food","title":"Eating food","text":"<p>This is one of the most common when it comes to scripts needing the use of items. <pre><code>String foodName = \"Lobster\";\nItem lobster = Inventory.stream().name(foodName).first();\n</code></pre> So we've filtered our inventory stream for any item with the name \"Lobster\" and then taken the first one.</p> <p>We then have to check that our stream did in fact find a valid item to interact with using .valid().</p> <p><pre><code>String foodName = \"Lobster\";\nItem lobster = Inventory.stream().name(foodName).first();\nif(lobster.valid()){\n   lobster.interact(\"Eat\");\n}\n</code></pre> Now we've added the .interact(\"Eat\") which will look for the action you passed, in this case \"Eat\", and if not the first option, will look for it in the right click menu to select it.</p>"},{"location":"Development/API/Items/#combining-items","title":"Combining items","text":"<p>To combine items, for example knife on logs, you need to stream for both items you wish to combine.</p> <p>The first 2 lines below are just the same as we have done above, filter the stream for the item you want and return it with first(). After that, we again need to check if both items are valid and they actually exist before trying to interact with them. <pre><code>Item knife = Inventory.stream().name(\"Knife\").first();\nItem log = Inventory.stream().name(\"Logs\").first();\n\nif(knife.valid() &amp;&amp; log.valid()){\n    knife.useOn(log);    \n}\n</code></pre></p>"},{"location":"Development/API/Items/#using-items-on-objects","title":"Using items on objects","text":"<p>This is very similar to the combining items section above, whereby you can stream both of your entities, an Item and a GameObject and use the useOn() method. <pre><code>Item lobster = Inventory.stream().name(\"Raw lobster\").first();\nGameObject range = Objects.stream().name(\"Range\").first();\nif(lobster.valid() &amp;&amp; range.valid()){\n        lobster.useOn(range);\n}\n</code></pre></p>"},{"location":"Development/API/Items/#dropping-items","title":"Dropping items","text":"<p>As you can probably imagine, there's a whole bunch of different ways to drop items, simply put you can stream the item, interact with it and drop it. However, something quite useful if dropping multiple items is the drop() functionality as shown in the snippet below.</p> <p><pre><code>List&lt;Item&gt; droppableItems = Inventory.stream().name(\"Vial\", \"Bones\", \"Burnt lobster\", \"Crushed gem\", \"Twisted bow\").list();\nInventory.drop(droppableItems);\n</code></pre> And as simple as that, it'll loop all items in your inventory that match any of the names provided and drop them all.</p>"},{"location":"Development/API/Locations/","title":"Locations","text":"<p>Locations are split into many different terminologies however we'll cover the most used and basics.</p>"},{"location":"Development/API/Locations/#tiles","title":"Tiles","text":"<p>Every single square in game is a tile. some you can stand on, some have objects on so you can't, however the entire map is split into tiles.</p> <p>These tiles have an X, Y and Z and look like so;</p> <p><pre><code>Tile tile = new Tile(3264, 2123, 0);\n</code></pre> The z axis is referred to as floor() meaning if you're on z = 1, you're likely upstairs somewhere.</p>"},{"location":"Development/API/Locations/#standard-areas","title":"Standard Areas","text":"<p>Areas are just collections of tiles to form an area. standard areas are square or rectangular in shape and take 2 tiles as the parameters to form the area as opposite diagonal corners. i.e. top left and bottom right and again, look like so.</p> <pre><code>Tile topLeft = new Tile(3264, 2123, 0);\nTile bottomRight = new Tile(3267, 2118, 0);\nArea area = new Area(topLeft, bottomRight);\n</code></pre> <p>These areas are useful for checking if you or something is in them. For example you might set an area where something spawns, like black chins. You could then check the area to see if it contains any black chins.</p> <pre><code>Boolean areaContainsBlackChins = area.contains(blackChins);\n</code></pre> <p>Here I used containsOrIntersects as if it's on the border, it's not technically contained inside the area, it's intersecting, so this method checks both.</p>"},{"location":"Development/API/Locations/#polygonal-areas","title":"Polygonal Areas","text":"<p>Polygonal areas work exactly the same, except it takes multiple tiles passed to it to create the polygon. Take this polygonal area of the Arceuus essence mine;</p> <p><pre><code>public Area MINE_AREA = new Area(\nnew Tile(1766, 3872, 0),\nnew Tile(1774, 3868, 0),\nnew Tile(1779, 3862, 0),\nnew Tile(1779, 3853, 0),\nnew Tile(1779, 3843, 0),\nnew Tile(1778, 3838, 0),\nnew Tile(1770, 3833, 0),\nnew Tile(1749, 3841, 0),\nnew Tile(1743, 3848, 0),\nnew Tile(1743, 3857, 0),\nnew Tile(1746, 3864, 0),\nnew Tile(1753, 3870, 0),\nnew Tile(1760, 3871, 0));\n</code></pre> Here you see the setup of the area has no difference except it takes more tiles to create the polygon.</p>"},{"location":"Development/API/MagicAPI/","title":"Magic API","text":"<p>The Magic API allows you to interact with the magic book and spell casting within OSRS</p>"},{"location":"Development/API/MagicAPI/#cast","title":"Cast","text":"<p>Firstly, find your spell from the relevant spellbook.</p> <pre><code>Magic.spell.X;\nArceuusSpell.spell.X;\nLunarSpell.spell.X;\nAncientSpell.spell.X;\n</code></pre> <p>To cast, simply call the .cast() method from your spell. Something to note, if the spell has multiple options such as the Camelot spell you can pass in the action you want it to perform <pre><code>Magic.Spell.HIGH_ALCHEMY.cast();\nMagic.Spell.CAMELOT_TELEPORT.cast(\"Cast\"); // this confirms what option you want to select\nMagic.Spell.CAMELOT_TELEPORT.cast(\"Seers'\"); // this confirms what option you want to select\n</code></pre></p>"},{"location":"Development/API/MagicAPI/#checking-if-the-spell-is-casting","title":"Checking if the spell is casting","text":"<p>You can check if the spell is casting by calling the <code>casting()</code> function which returns a boolean if a spell is casting</p> <pre><code>Condition.wait(() -&gt; Magic.HIGH_ALCHEMY.casting(), 50, 100);\n</code></pre>"},{"location":"Development/API/MagicAPI/#checking-if-a-spell-is-castable","title":"Checking if a spell is castable","text":"<p>You can check whether a spell is can be cast by using the <code>canCast()</code> function call.</p> <p><pre><code>boolean canCast = Magic.Spell.ENCHANT_LEVEL_1_JEWELLERY.canCast();\n</code></pre> There are some other methods available too for you to explore and use at your own pace.</p>"},{"location":"Development/API/MagicAPI/#cast-a-spell-on-an-npc","title":"Cast a spell on an npc","text":"<p>You firstly have to select the spell with cast() and then once you've confirmed you're casting() it, you can then interact with the npc.</p> <p><pre><code>if(Magic.Spell.FIRE_BLAST.cast() &amp;&amp; Magic.Spell.FIRE_BLAST.casting()){\n    Npc goblin = Npcs.stream().name(\"Goblin\").nearest().first();\n    if(goblin.inViewport()){\n        goblin.click(new InteractingWithNpcWaiter());    \n    }\n}\n</code></pre> There are some other methods available too for you to explore and use at your own pace.</p>"},{"location":"Development/API/Npcs/","title":"Npcs","text":"<p>A NPC is classified as a non-player character. These items are filterable to return the specific npc(s) that you want/need.</p> <p>Npcs have properties associated with them, some of them are listed below. There are many others so feel free to take a look into what other properties are involved with npcs.</p> <ul> <li> <p>ID (Integer) - This is the ID of the npc, this is created by Jagex and is universal throughout all clients. For example, the ID for gold is 995. Some npcs have multiple</p> </li> <li> <p>Name (String) - This is the name of the npc.</p> </li> <li> <p>Tile (Tile) - This is the location in the game world in which the item sits on the floor, please see Locations.md for more information on tiles.</p> </li> <li> <p>Combat Level (Integer) - This returns the combat level of the npc, for example a Rat, it could be level 3.</p> </li> </ul> <p>To filter a npcs you first need to return the stream, see the StreamAPI section for more info on this.</p> <p><pre><code>int HANS_ID = 3105;\nNpc hans = Npcs.stream().id(HANS_ID).first();\n</code></pre> In this scenario, we have cached the npc hans.</p>"},{"location":"Development/API/Objects/","title":"Objects","text":"<p>An object is classified as something you can't pick up into your inventory and/or is a part of the game like a door or portal. These items are filterable to return the specific object(s) that you want/need.</p> <p>Objects have properties associated with them, some of them are listed below. There are many others so feel free to take a look into what other properties are involved with objects.</p> <ul> <li> <p>ID (Integer) - This is the ID of the object, this is created by Jagex and is universal throughout all clients. For example, the ID for gold is 995.</p> </li> <li> <p>Name (String) - This is the name of the object.</p> </li> <li> <p>Tile (Tile) - This is the location in the game world in which the object sits, please see Locations.md for more information on tiles.</p> </li> <li> <p>Actions - Actions are the options you have when interacting with the object. For example a door if open would have a \"Close\" action and if closed and \"Open action\".</p> </li> </ul> <p>To filter objects you first need to return the stream, see the StreamAPI section for more info on this.</p> <p><pre><code>int DOOR_ID = 1509;\nGameObject door = Objects.stream().id(DOOR_ID).first();\n</code></pre> In this scenario, we have cached the GameObject of a door.</p>"},{"location":"Development/API/PaintBuilderAPI/","title":"PaintBuilder API","text":"<p>The PaintBuilder API is a simple API that provides an easy way to display paint for your bit with in-built progress tracking various in game events such as levelling up.</p>"},{"location":"Development/API/PaintBuilderAPI/#creating-the-builder","title":"Creating the builder","text":"<p>The PaintBuilder is a fluent API meaning you can call numerous functions on the API before building it.</p> <pre><code>PaintBuilder.newBuilder().build();\n</code></pre> <pre><code>PaintBuilder.newBuilder()\n    .y(50)\n    .x(55)\n    .build();\n</code></pre>"},{"location":"Development/API/PaintBuilderAPI/#positioning-your-paint","title":"Positioning your paint","text":"<p>To position your paint you can set the paint on the <code>X</code> and <code>Y</code> axis of the emulator by calling the <code>x()</code> and <code>y()</code> functions like so</p> <pre><code>PaintBuilder.newBuilder()\n    .y(45)\n    .x(55)\n    .build()\n</code></pre>"},{"location":"Development/API/PaintBuilderAPI/#tracking-skill","title":"Tracking Skill","text":"<p>The PaintBuilder has in-built methods for tracking skills. Without passing skill options, the paintbuilder will handle it all and display all the fields.</p> <pre><code>PaintBuilder.newBuilder()\n    .trackSkill(Skill.Fishing)\n    .build();\n</code></pre>"},{"location":"Development/API/PaintBuilderAPI/#tracking-skill-options","title":"Tracking Skill Options","text":"<p>If you wanted to only display for example the experience gained you can pass skill options to customise the paint to your liking as below. <pre><code>PaintBuilder.newBuilder()\n    .trackSkill(Skill.Fishing, \"This is a custom label\", TrackSkillOption.Exp)\n    .build()\n</code></pre></p> <p>The <code>TrackSkillOption</code> enum provides 4 options</p> <pre><code>TrackSkillOption.Exp\nTrackSkillOption.Level\nTrackSkillOption.LevelProgressBar\nTrackSkillOption.TimeToNextLevel\n</code></pre>"},{"location":"Development/API/PaintBuilderAPI/#track-items","title":"Track Items","text":"<p>Along with tracking skills, we can also track items or inventory changes. For example someone looting molten glass would want to know how much glass they've looted.</p> <p>Similarly to the above, you can pass the item to the call and let the builder do the rest, or your can pass options later.</p> <p><pre><code>PaintBuilder.newBuilder()\n        .trackInventoryItem(c.MOLTEN_GLASS_ID, \"Molten Glass\")\n        .build()\n</code></pre> To change the display on what details are shown, you can pass TrackInventoryOption with the following variables <pre><code>TrackInventoryOption.QuantityChange\nTrackInventoryOption.valueOf()\nTrackInventoryOption.values()\nTrackInventoryOption.Price\n</code></pre></p>"},{"location":"Development/API/PaintBuilderAPI/#custom-strings","title":"Custom Strings","text":"<p>Sometimes the paint builder doesn't offer the exact method you need to track what you need. In this case you can use custom strings to display information that you're tracking yourself.</p> <p>To add a custom string to the output paint you can call the <code>addString()</code>. This takes a string and a callable, if you're new to callables, Intellij will practically write it for you however they can be written like so.</p> <p><pre><code>PaintBuilder.newBuilder()\n        .addString(\"Method: \", new Callable&lt;String&gt;() {\n                     @Override\n                     public String call() throws Exception {\n                        return userMethod;\n                    }\n        })\n    .build()\n</code></pre> Shown here is me storing the user selected method to a variable 'useMethod' and displaying it on the paint.</p>"},{"location":"Development/API/PaintBuilderAPI/#adding-a-checkbox","title":"Adding A CheckBox","text":"<p>If you wanted to add a checkbox to turn on/off certain features you can do so by doing the following: <pre><code>PaintBuilder.newBuilder()\n    .addCheckbox(\"Draw Tiles\", \"drawTiles\", true)\n    .build()\n</code></pre></p> <p>The first argument is the text to display next to the checkbox, the second is the id to associate with the checkbox and the third is the default state for the checkbox. When a user interacts with the checkbox a <code>PaintCheckboxChangedEvent</code> will be sent, you should write an event handler to intercept this.</p>"},{"location":"Development/API/PaintBuilderAPI/#remove-script-version","title":"Remove Script Version","text":"<p>The paint builder automatically shows the script version from the <code>ScriptManifest</code> to remove this default behaviour you can call the <code>removeScriptNameVersion()</code> function.</p> <pre><code>PaintBuilder.newBuilder()\n    .removeScriptNameVersion()\n    .build()\n</code></pre>"},{"location":"Development/API/PaintBuilderAPI/#disabling-discord-progress-uploads","title":"Disabling Discord progress uploads","text":"<p>By default when calling the PaintBuilder progress reports will be sent to the progress-reports channel in the Powbot discord. If you want to disable this default functionality you need to call the <code>withoutDiscordWebhook()</code> as part of your builder.</p> <pre><code>PaintBuilder.newBuilder()\n    .withoutDiscordWebhook()\n    .build()\n</code></pre>"},{"location":"Development/API/PaintBuilderAPI/#adding-paint","title":"Adding paint","text":"<p>Once you have built your paint using the PaintBuilder API you need to call <code>addPaint</code> function which takes a type of <code>Paint</code> which your PaintBuilder returns</p> <pre><code>@Override\npublic void onStart() {\n    Paint paint = PaintBuilder.newBuilder()\n        .x(40)\n        .y(45)\n        .trackSkill(Skill.Fishing)\n        .build()\n    addPaint(paint);\n}\n</code></pre>"},{"location":"Development/API/PrayerAPI/","title":"Prayer API","text":"<p>The prayer API provides a way to manage prayer functionalities, including checking prayer status, getting prayer points, handling quick prayers and active prayers.</p>"},{"location":"Development/API/PrayerAPI/#checking-if-any-prayers-are-active","title":"Checking if any prayers are active","text":"<p>The <code>prayersActive()</code> function returns <code>true</code> if any prayers are currently active and <code>false</code> otherwise.</p> <p>Example:  <pre><code>boolean prayersAreActive = Prayer.prayersActive();\nSystem.out.println(\"Are prayers active? \" + prayersAreActive);\n</code></pre></p>"},{"location":"Development/API/PrayerAPI/#check-if-a-specific-prayer-is-active","title":"Check if a specific prayer is active","text":"<pre><code>boolean isActive = Prayer.prayerActive(Prayer.Effect.PROTECT_FROM_MELEE)\nSystem.out.println(\"Is my prayer active? \" + isActive);\n</code></pre>"},{"location":"Development/API/PrayerAPI/#check-whether-a-prayer-is-in-the-quick-prayer-slot","title":"Check whether a prayer is in the quick prayer slot","text":"<pre><code>Effect prayer = Effect.PROTECT_FROM_MISSILES;\nboolean isQuickPrayer = Prayer.prayerQuick(prayer);\nSystem.out.println(prayer + \" is in quick prayer slot: \" + isQuickPrayer);\n</code></pre>"},{"location":"Development/API/PrayerAPI/#toggling-quick-prayer","title":"Toggling quick prayer","text":"<p>Toggle the status of quick prayer based on the provied parameter</p> <p>Example: <pre><code>Prayer.quickPrayer(true); // Activate quick prayer\nPrayer.quickPrayer(false); // Disable quick prayer\n</code></pre></p>"},{"location":"Development/API/PrayerAPI/#check-whether-quick-prayer-is-active","title":"Check whether quick prayer is active","text":"<p>Returns <code>true</code> if quick prayers are currently active and <code>false</code> otherwise.</p> <p>Example: <pre><code>boolean isQuickPrayerActive = Prayer.quickPrayer();\nSystem.out.println(\"Quick prayer active: \" + isQuickPrayerActive);\n</code></pre></p>"},{"location":"Development/API/PrayerAPI/#obtaining-the-remaining-prayer-points","title":"Obtaining the remaining prayer points","text":"<pre><code>int currentPrayerPoints = Prayer.prayerPoints();\nSystem.out.println(\"You have \" + currentPrayerPoints + \" prayer points remaining\");\n</code></pre>"},{"location":"Development/API/Rendering/","title":"Drawing On Screen","text":"<p>This page's aim is to walk you through using the render event to draw on screen.</p>"},{"location":"Development/API/Rendering/#render-event","title":"Render Event","text":"<p>Firstly, to be able to draw on screen we have to subscribe to the RenderEvent.</p> <pre><code>@Subscribe\n    public void onRender(RenderEvent r){\n\n        }\n</code></pre> <p>So you create a public void and subscribe to the RenderEvent passed as the param.</p>"},{"location":"Development/API/Rendering/#drawing","title":"Drawing!","text":"<pre><code>@Subscribe\npublic void onRender(RenderEvent r){\n    Rendering.setColor(Color.getCYAN());\n    Rendering.drawString(\"Hello!\", 50, 50);\n}\n</code></pre> <p>So the graphics in the API now, is not what it used to be if you're familiar with the desktop API. Simply put, there's no AWT for android. All of the methods you have access to were recreated using android alternatives and put into the API we have now. </p> <p>Therefore, you'll notice g.setColor() doesn't use the AWT colors that it used to, and in turn uses the API methods to return a color. You can also use Color.argb() and rgb() if you want to pass a custom rgb color code.</p>"},{"location":"Development/API/Rendering/#do-not-query","title":"Do Not Query!","text":"<p>The render event thread runs on an extremely quick loop, because of this, people try to do quick calculations and queries for faster results. This is a big no no.  If you start to query in this method you'll begin to notice huge drops in fps.</p> <p>Calculate in the poll() thread and pass the object/tile/npc/area whatever to your method.</p>"},{"location":"Development/API/Rendering/#examples","title":"Examples","text":"<p>Some commonly drawn things and how to do them below. For reference, any objects passed to be drawn are streamed and cached in poll() and passed to the onRender.</p> <pre><code>Tile tile = Players.local().tile();\n...\n...\n...\n@Subscribe\npublic void onRender(RenderEvent r){\n    Rendering.setColor(Color.getCYAN());\n    tile.matrix().draw(g); // matrix has it's own draw method\n    Rendering.drawPolygon(tile.matrix().bounds()); // alternatively, you can draw the polygon (this requires the scale to be set above)\n}\n</code></pre> <p><pre><code>GameObject object = Objects.stream().name(\"Chest\").nearest().first();\nGameObject objectNotShrunk = Objects.stream().name(\"Chest\").nearest().first().downscale(false);\n...\n...\n...\n@Subscribe\npublic void onRender(RenderEvent r){\n    Rendering.setColor(Color.getCYAN());\n\n    //by default the models are shrunk to help with click accuracy\n    object.model().draw(object.localX(), object.localY(), g); // draws the model\n    Rendering.drawPolygon(object.model().quickHull(object.localX(), object.localY())); // draws the hull of the model\n\n    // as per defined by the objectNotShrunk setting downscale to false, you can also then draw the same thing full size    \n    object.model().draw(object.localX(), object.localY(), g);\n    Rendering.drawPolygon(object.model().quickHull(object.localX(), object.localY()));\n}\n</code></pre> <pre><code>// This may well cause some drop in fps depending on how many tiles you have in your area.\n\nArea drawArea = new Area(new Tile(0,0,0), new Tile(9,9,0));\n...\n...\n...\n    @Subscribe\n    public void onRender(RenderEvent r) {\n        for(Tile tile:drawArea.get_tiles()){\n            tile.matrix().draw(g);\n        }\n    }\n</code></pre></p>"},{"location":"Development/API/SkillsAPI/","title":"Skills API","text":"<p>The Skills API provides a set of functions related to OSRS skills, experience and levels.</p>"},{"location":"Development/API/SkillsAPI/#get-the-current-levelincludes-boosted","title":"Get the current level(Includes boosted)","text":"<p>Returns the level of the skill passed as the parameter. This includes boosted/depleted levels.</p> <p>For example if your prayer was 30/70 the below example would return 30.</p> <pre><code>val prayerLevel = Skills.level(Skill.Prayer)\n// returns 30\n</code></pre>"},{"location":"Development/API/SkillsAPI/#get-the-current-real-levelnon-boosted","title":"Get the current real level(Non boosted)","text":"<p>The <code>realLevel()</code> function returns the core non boosted/depleted level for the skill.</p> <p>For example if your prayer was 30/70 the below example would return 70.</p> <pre><code>val prayerLevel = Skills.realLevel(Skill.prayer)\n// returns 70\n</code></pre>"},{"location":"Development/API/SkillsAPI/#get-the-time-since-experience-was-gained-for-a-specific-skill","title":"Get the time since experience was gained for a specific skill","text":"<p>The <code>timeSinceExpGained()</code> function returns the time in ms since experience was gained for a specific skill.</p> <p>Example: <pre><code>long timeSinceLastExp = Skills.timeSinceExpGained(Skill.MAGIC);\nSystem.out.println(\"Time since last experience in Magic: \" + timeSinceLastExp + \" ms\");\n</code></pre></p>"},{"location":"Development/API/SkillsAPI/#obtaining-the-current-experience-for-a-skill","title":"Obtaining the current experience for a skill","text":"<p>The <code>experience(Skill)</code> function will return the experience points for a given skill. <pre><code>long currentExp = Skills.experience(Skill.MAGIC);\n</code></pre></p>"},{"location":"Development/API/SkillsAPI/#obtaining-the-experience-required-until-the-next-level","title":"Obtaining the experience required until the next level","text":"<p>Returns the experience required to reach the next level for the skill passed as the parameter.</p> <pre><code>long expForNextLevel = Skills.experienceAtNextLevel(Skill.MAGIC);\nSystem.out.println(\"Experience required for next level in Magic: \" + expForNextLevel + \" XP\");\n</code></pre>"},{"location":"Development/API/StoreAPI/","title":"Store API","text":"<p>The store API provides functions that allow you to handle interactions with the store in OSRS. </p>"},{"location":"Development/API/StoreAPI/#determine-whether-the-store-is-open","title":"Determine whether the store is open","text":"<pre><code>if (!Store.opened()) {\n    System.out.println(\"The store is not opened\");\n}\n</code></pre>"},{"location":"Development/API/StoreAPI/#opening-the-store","title":"Opening the store","text":"<p>The <code>open(npcName)</code> function opens the store. The parameter to the function is the NPCs name that you need to interact with to open the store.</p> <pre><code>if (!Store.opened()) {\n    if (Store.open(\"Store owner\")) {\n        Condition.wait(() -&gt; Store.opened(), 300, 10);\n    }\n}\n</code></pre>"},{"location":"Development/API/StoreAPI/#closing-the-store","title":"Closing the store","text":"<p>The <code>close()</code> function closes the store.  <pre><code>if (Store.opened()) {\n    if (Store.close()) {\n        Condition.wait(() -&gt; !Store.opened(), 300, 10)\n    }\n}\n\n\n## Get a list of items in the store\nThe `items()` function returns a list of components for the items in the store.\n\n```java\nif (Store.opened()) {\n    for (Item item : Store.items()) {\n        System.out.println(item.name());\n    }\n}\n</code></pre></p>"},{"location":"Development/API/StoreAPI/#buying-from-the-store","title":"Buying from the store.","text":"<p>The <code>buy(itemId, buyAmount)</code> function takes the itemId and the amount you wish to buy from the store as parameters.</p> <pre><code>if (Store.opened()) {\n    int previousLobsterCount = Inventory.stream().id(Constants.LobsterId).count();\n    if (Store.buy(Constants.LobsterId, 2)) {\n        Condition.wait(() -&gt; Inventory.stream().id(Constants.LobsterId).count() &gt; previousLobsterCount, 300, 10)\n    }\n}\n</code></pre>"},{"location":"Development/API/StoreAPI/#get-the-store-name","title":"Get the store name","text":"<pre><code>if (Store.opened()) {\n    String storeName = Store.shopName();\n    System.out.println(\"Store name is \" + storeName);\n}\n</code></pre>"},{"location":"Development/API/Varpbits/","title":"Varpbits","text":"<p>Varbits are one of the most complex aspects of the API. Unfortunately, there's no pretty way around dealing with them either. I'll try and keep things simple along the way.</p>"},{"location":"Development/API/Varpbits/#overview","title":"Overview","text":"<p>Varplayers (often called varps) are used to store values unique to a player. For example, game settings, prayers, runepouch data, quests etc. Often confused with these are then varpbits. Varpbits are individual bits of a varplayer.</p>"},{"location":"Development/API/Varpbits/#breakdown","title":"Breakdown","text":""},{"location":"Development/API/Varpbits/#general-knowledge","title":"General Knowledge","text":""},{"location":"Development/API/Varpbits/#decimal","title":"Decimal","text":"<p>Decimal is base 10. The digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</p> <p>Notice that there are 10 digits in base 10 0-9.</p>"},{"location":"Development/API/Varpbits/#hex","title":"Hex","text":"<p>Hex is base 16. The digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.</p> <p>Similarly, there are 16 digits in base 16.</p>"},{"location":"Development/API/Varpbits/#binary","title":"Binary","text":"<p>Binary is base 2. You can probably guess which digits are used here.. 0 and 1. Binary numbers can also be used as booleans in which case 0 is false and 1 is true.</p>"},{"location":"Development/API/Varpbits/#notation","title":"Notation","text":"<p>Hex values are prefixed with 0x.</p> <p>Binary values are prefixed with 0b.</p> <p>In java, 100 in binary is written 0b100 and 100 in hex is written 0x100.</p>"},{"location":"Development/API/Varpbits/#bit-shifting","title":"Bit Shifting","text":"<p>Here we get into the bitwise manipulation.</p> <p>For example, lets say we have a binary number. As we know from the notation section, binary is prefixed with 0b so our number could be something like this below. <pre><code>0b1011010000\n</code></pre> However, in this  example, we actually don't want all of those 0's at the end, we just want <code>0b101101</code>. In order to do this, we have to shift to the right. Imagine a trash can after the last 0 of the original binary number and each time you shift by 1, 1 more digit goes into the trash can. In our example, we want to shift to the right by 4 to remove all 4 spare 0's.</p> <p>To do a bit shift to the right, the operator is <code>&gt;&gt;</code>.</p> <p><pre><code>0b1011010000 &gt;&gt; 1 // becomes 0b101101000\n0b1011010000 &gt;&gt; 2 // becomes 0b10110100\n0b1011010000 &gt;&gt; 3 // becomes 0b1011010\n0b1011010000 &gt;&gt; 4 // becomes 0b101101\n</code></pre> Hopefully you can see that depending on how many shifts to the right, we get a different output. However, our 4 shift leaves us then with <code>0b101101</code>.</p>"},{"location":"Development/API/Varpbits/#bit-masking","title":"Bit Masking","text":"<p>So we've shifted off the unwanted 0's at the end of our binary number, now we need to pull out the parts we actually want from what's left. To do this, we create a mask, similar to a mask layer in photoshop if you've ever used that. Whereby you tell it which parts you want and which parts you don't. </p> <p>In our use case, bit masking uses a 0 to signify the digits you don't want, and a 1 for the digits you do want.</p> <p>From our binary value post bit shift, we only want the 101 value at the very end. 0b101101. Bit masks are implemented with the &amp; operator like below.</p> <pre><code>0b101101 &amp; 0b000111\n</code></pre> <p>This can most likely be tidied up further but for now, it'll do. </p> <p>Let's put it all together in an example.</p> <pre><code>int originalValue = Varpbits.varpbit(exampleIndex);// the output of this is 0b1011010000\nint bitShiftedValue = originalValue &gt;&gt; 4; // results in 0b101101\nint bitMaskedValue = bitShiftedValue &amp; 0b000111; // extracts the desired bits\n\n//Alternatively, you could write it out like this\nint value = Varpbits.varpbit(exampleIndex) &gt;&gt; 4 &amp; 0b000111;\n</code></pre>"},{"location":"Development/API/Varpbits/#dans-real-working-example","title":"Dan's Real Working Example","text":"<p>I recently dove head first into vaprbits while trying to find the values of certain game settings such as roofs hidden or hiding the store &amp; activity advisor button on the minimap etc.</p> <p>I'm going to walk through how to find out if your activity advisor is turned on or off.</p> <p>I started off by turning on the varpbit change event debug option and changed my setting from on to off repeatedly, till I found the index of the varpbit I wanted along with the on value and off value. However, I found that the index is <code>3190</code>.</p> <p></p> <pre><code>public int ADVISOR_INDEX = 3190;\npublic int SHIFTED_VALUE = Varpbits.varpbit(ADVISOR_INDEX) &gt;&gt; 3; // Shift by 3 bits\npublic int MASKED_VALUE = SHIFTED_VALUE &amp; 0b00001; // Mask to get the relevant bit\n// OFF value: 1 (0b00001), ON value: 0 (0b00000)\n</code></pre> <p>You'll notice how I've written the decimal values, this is what the varpbit event returns. So we'll want to convert this to binary. I use this converter tool linked but use whatever you prefer. Decimal To Binary Converter</p> <p>On this page, depending on the decimal values you have for on/off you'll need to look at whichever option has the same number of digits for both values. In this case below, they both do, so I'll use the 8 digit box.</p> <p>Open 2 tabs, one for the on value and one for the off value, I like to flick between them to see which <code>bits</code> of the binary are changing so I know how I need to manipulate it to get the value I want.</p> <p></p> <p>As you can see hopefully, it's the 4th last digit that is changing. I can now use this to determine my shift and mask.</p> <p>I know that I don't want the last 3 digits, so I can simply shift this off by 3.</p> <pre><code> public int ADVISOR_INDEX = 3190;\n public int SHIFTED_VALUE = Varpbits.varpbit(ADVISOR_INDEX) &gt;&gt; 3;\n // this leaves me with an OFF value of 0b10011 and an ON value of 0b10010\n</code></pre> <p>All that's left is to mask it to get only the value we want.</p> <pre><code> public int ADVISOR_INDEX = 3190;\n public int SHIFTED_VALUE = Varpbits.varpbit(ADVISOR_INDEX) &gt;&gt; 3;\n public int MASKED_VALUE = SHIFTED_VALUE &amp; 0b00001;\n // this leaves me with an OFF value of 0b00001 and an ON value of 0b00000\n // in otherwords, OFF is 1 and ON is 0\n</code></pre> <p>So we can wrap this in a nice function like below. Since we know our ON value is 0, if it IS 0, we want to turn it off. <pre><code> public boolean shouldTurnOffActivityAdvisor(){\n        return (Varpbits.varpbit(ADVISOR_INDEX) &gt;&gt; 3 &amp; 0b00001) == 0;\n }\n</code></pre></p> <p>A little long-winded but we got there in the end.</p>"},{"location":"Development/API/Varpbits/#varpbitsvarpbit-vs-varpbitsvalue","title":"Varpbits.varpbit() vs Varpbits.value()","text":"<p>Back in 2022 .value() was added to the API which handles the bitwise manipulation required as defined by the cache. Where the varpbit() value will be the raw un-manipulated value.</p>"},{"location":"Development/API/Varpbits/#quest-example","title":"Quest Example","text":"<p>As mentioned, quests are one of the many things that use these to track your progress through the quest. In our Quest API these are handled for us, but as example we can see below how they might get used. <pre><code>int questVarpbit = Quests.Quest.SHEEP_SHEARER.getVarbit();\nint currentStep = Varpbits.varpbit(questVarpbit);\n</code></pre></p> <p>You'll also notice, the RuneLite quest helper uses these to determine what step you're on in order to guide you on what to do.</p>"},{"location":"Development/API/Waits/","title":"Waits","text":"<p>Waits are useful for many things from anti-pattern sleeps to delays between actions to confirming an action took place. You can find more on this under the Fundamentals In Practice section under waits.</p>"},{"location":"Development/API/Waits/#standard-sleep","title":"Standard Sleep","text":"<p>A standard sleep will sleep for the time you pass to it as an integer in milliseconds.</p> <p><pre><code>Condition.sleep(500);\n</code></pre> This snippet will sleep your script for 500ms and then continue.</p> <p>This however is NOT recommended. Why? Well, no human waits exactly on the dot 500ms perfectly every time they complete an action. Then, there are so many unanswered questions with this. For example how do you know 500ms is long enough? What about any lag? What if it failed the first time and it's then waiting 500ms for no reason? What about the un-human like pattern it creates?</p>"},{"location":"Development/API/Waits/#conditional-waiting","title":"Conditional Waiting","text":"<p>Conditional waiting allows for a boolean or series of booleans to be passed to it to check if something is true or not to either continue or to not continue sleeping. Think of it as a reaction wait.</p> <p>Example; Mine rock -&gt; wait until ore is in my inventory -&gt; mine another rock</p> <pre><code>Condition.wait(() -&gt; boolean, time ms, attempts);\n</code></pre> <p>Above is the call and the parameters you're required to pass to it. Lets break it down.</p> <p>Boolean: this is what you want to be true or false, so if we use my above example about mining an ore the boolean would be whether the ore was mined or not.</p> <p>Time ms: this is how often to check if the boolean is true. So, in our case we might check if the ore was mined every 150ms.</p> <p>Attempts: this is how many times we want to check the boolean before moving on. In our case, mining an ore shouldn't take longer than 5 seconds, so I'll set attempts to 33.</p> <p>This builds our code like so;</p> <pre><code>rock.interact(\"Mine\"); // Interacting with the rock\nCondition.wait(() -&gt; !rock.valid(), 150, 33); // !rock.valid means the ore was mined and the rock is no longer valid. Either we or someone else mined the rock.\n</code></pre> <p>The above code has a maximum wait time of 4950ms and minimum of 150. If the boolean of !rock.valid() returns true at any of the 33 checks it will exit early. For example if it returns true on attempt 10 it'll exit early meaning you waiting 1500ms.</p> <p>There will be more examples on this in the Fundamentals In Practice section under waits.</p>"},{"location":"Development/API/Walking/","title":"Walking to Locations","text":"<p>Walking to locations can be used in all manner of scripts. Whether it be from a bank to the furnace or from Lumbridge to GE. Either way we need to be abl to navigate around the game.</p>"},{"location":"Development/API/Walking/#simple-navigation","title":"Simple Navigation","text":"<p>To begin, straight line navigation is the simplest. In this scenario we're going to walk from Edgeville bank to Edgeville furnace.</p> <p><pre><code>Movement.step()\n</code></pre> This is the method we'll use. Step will use the minimap to select the closest tile it can to the destination we provide. Meaning if there were no obstacles, we could run in a straight line anywhere on the map is we looped this method.</p> <p>Step() also will try to mimic more realistic behaviour by tapping on the game screen rather than the minimap when you're close by. Rather than using the minimap to move 1 tile, it'll tap the actual in game tile instead.</p> <p>As an example, the Edgeville furnace is close to and visible from the bank on the minimap, step() is the best method to use here to get closer to it.</p> <pre><code>Tile furnace = new Tile(3108, 3498, 0);\nMovement.step(furnace);\n</code></pre>"},{"location":"Development/API/Walking/#using-run","title":"Using Run","text":"<p>If you want your script to run between locations you can turn on and off run using some of the following methods.</p> <p><pre><code>if(Movement.energyLevel()&gt;20 &amp;&amp; !Movement.running()){\n    Movement.running(true);\n}\n</code></pre> This checks if you have over 20% run energy and run is turned off. If both of these conditions are met, we turn run on.</p>"},{"location":"Development/API/Walking/#web-walking","title":"Web Walking","text":"<p>Web walking, put simply, is an all-in-one solution to navigating the game. You provide the destination and then the method handles the rest.</p> <p>To use it in a simple way, we'll use mining in south-west Varrock as our example.</p> <p>The beauty of the web walker is you don't need to provide anything other than where you want to go, so it's as simple as:</p> <pre><code>Tile bank = new Tile(3185, 3437, 0);\nMovement.moveTo(bank);\n</code></pre> <p>It can even be simpler than that.</p> <p>What if your script allows for multiple banks? You don't want to have to hardcode them all... <pre><code>Movement.moveToBank();\n</code></pre> This will calculate the <code>cheapest</code> path to the bank. Every action has a cost, every area you walk through has a cost, and they all amalgamate into the cost of the path. This might mean it's actually cheaper (in calculatory cost, not GP cost)  to use a ring of wealth charge from Varrock west bank to get to the GE than it is to walk there.</p>"},{"location":"Development/API/Walking/#what-if-its-not-that-simple-though","title":"What if it's not that simple though?","text":"<p>Well if you want more control over the walking this can be done with the builder.</p> <p><pre><code>Tile location = new Tile(3185, 3437, 0);\nMovement.builder(location).setRunMin(45).setRunMax(75).setAutoRun(false).setUseTeleports(false).move();\n</code></pre> This snippet here will walk to the tile provided however it will turn your run back on if it's between the 45 and 75. Here we also tell it not to use teleports, so if it would usually prioritise a teleport to get to the destination because of it's cost, we can just ask it to walk instead.</p>"},{"location":"Development/API/Walking/#path-traversal","title":"Path Traversal","text":"<p>Web walking is great for getting you from A to B where A is unknown. Since it generates its own path and will get you to your destination. However, what if both A and B are both known? Running the same path repeatedly? A fairly simple path with little to no obstacle? I personally would suggest not using the web walker for this.</p> <p>Lets take a recent example, running bloods through the true blood altar.</p> <p>For anyone who's done this knows there's a bunch of caves to go through and then the last one is a much longer walk to the next cave object to interact with.</p> <p>You could use the webwalker to walk this path for you, and it would probably do the job. However I personally would make my own path and use a traverse() option on it, so I have full control over the how, the when and the where things activate.</p> <p>Enough waffle, lets get into it. Either of the links below should work and be needed to follow along.</p> <p>https://nickert1337.github.io/</p> <p>https://explv.github.io/</p> <p>In the first image, there's no path just yet, however top right I have selected the path tool, 5th option down. </p> <p>In this second image, I've drawn the path by clicking at each point where I want the next tile to go. </p> <p>Before anyone points out that doing this method you actually don't start the walking path from way at the top since you come out the first cave on the left part way through the path, this is where traverse() is pretty nice.</p> <p>The traverse() method will pick up the next walkable tile on the map to our end goal destination. Meaning we could join this path anywhere in the sequence and I'll head in the right direction.</p> <p>So how do we use it? Firstly, we need to create an array of tiles that we created on the map earlier.</p> <pre><code> Tile[] path = {\n        new Tile(3478, 9835, 0),\n        new Tile(3481, 9829, 0),\n        new Tile(3484, 9825, 0),\n        new Tile(3485, 9823, 0),\n        new Tile(3486, 9820, 0),\n        new Tile(3487, 9818, 0),\n        new Tile(3489, 9816, 0),\n        new Tile(3492, 9814, 0),\n        new Tile(3494, 9813, 0),\n        new Tile(3496, 9811, 0),\n        new Tile(3497, 9809, 0),\n        new Tile(3498, 9807, 0),\n        new Tile(3500, 9805, 0)\n };\n</code></pre> <p>Now we can make a TilePath object to traverse. Notice I also set a variable called targetLocation, this set by accessing the array of tiles and getting the last one.</p> <p>To access the array you use square brackets and pass an index to it of which one in the list you want to get out of it. i.e. to get the first one it would be path[0].</p> <p>However, by doing <code>path.length-1</code> we get the final tile in the array. Bare in mind, we have to do -1 because arrays are 0 indexed. Meaning the first item is index 0, the second is 1, so on and so forth. So if there were 10 tiles, it would be index 0-9 meaning length returns 10 so 10-1 is therefore pointing to the index 9 as our last tile.</p> <p>I've also created a GameObject for the cave we want to go through next, you'll see why later, but I use the targetTile location in my within() to help filter it. <pre><code> Tile[] path = {\n        new Tile(3478, 9835, 0),\n        new Tile(3481, 9829, 0),\n        new Tile(3484, 9825, 0),\n        new Tile(3485, 9823, 0),\n        new Tile(3486, 9820, 0),\n        new Tile(3487, 9818, 0),\n        new Tile(3489, 9816, 0),\n        new Tile(3492, 9814, 0),\n        new Tile(3494, 9813, 0),\n        new Tile(3496, 9811, 0),\n        new Tile(3497, 9809, 0),\n        new Tile(3498, 9807, 0),\n        new Tile(3500, 9805, 0)\n };\n\n        TilePath tilepath = new TilePath(path);\n        Tile targetLocation = path[path.length-1]; \n        GameObject cave = Objects.stream(15).name(\"Probably called cave\").within(targetLocation, 4).first();\n</code></pre></p> <p>Now to put it all together and actually do some walking. We loop an integer starting at 0 and ending at our length-1, so we have the option should we need to, walk every single tile.</p> <p>However, that won't be necessary. We have a break clause in there, so we can exit nice and early. People don't tend to walk right up to the object they want before interacting with it, they will click it as soon as it's visible.</p> <p>That's what we created the cave object for, each step we take, we check if the object is visible, if it is, we can click it. Much more human-like than the webwalker which will walk you to the exact same tile every time.</p> <p>Then lastly, we just call traverse(). You can also do things like reverse().traverse() if you want the ability to walk the same path back and forth. i.e. from mine to bank, bank to mine. <pre><code> Tile[] path = {\n        new Tile(3478, 9835, 0),\n        new Tile(3481, 9829, 0),\n        new Tile(3484, 9825, 0),\n        new Tile(3485, 9823, 0),\n        new Tile(3486, 9820, 0),\n        new Tile(3487, 9818, 0),\n        new Tile(3489, 9816, 0),\n        new Tile(3492, 9814, 0),\n        new Tile(3494, 9813, 0),\n        new Tile(3496, 9811, 0),\n        new Tile(3497, 9809, 0),\n        new Tile(3498, 9807, 0),\n        new Tile(3500, 9805, 0)\n };\n\n TilePath tilepath = new TilePath(path);\n Tile targetLocation = path[path.length-1];\n GameObject cave = Objects.stream(15).name(\"Probably called cave\").within(targetLocation, 4).first();\n\n for(int i = 0; i&lt;path.length;i++){\n    if(targetLocation.distance()&lt;5 || cave.inViewport()){\n        break;\n    } else {\n        tilepath.traverse();\n    }\n }\n</code></pre></p>"},{"location":"Development/API/Widgets/","title":"Widgets","text":"<p>Widgets are on screen components/interfaces such as the chat box, game tabs, world map, etc etc.</p> <p>Widgets are the main umbrella parent to components. For example the widget 218 is the magic spell book. Inside this widget are all of the spell on screen components.</p> <p>Widgets can be returned one of two ways currently. </p> <ul> <li>Filtering the stream</li> <li>Static Widgets/Components</li> </ul>"},{"location":"Development/API/Widgets/#filtering-the-widget-stream","title":"Filtering the Widget Stream","text":"<p>Filtering the stream is the same as any other topic under the Stream API.</p> <pre><code>Component component = Components.stream().widget(162).text(\"Click here to continue\").viewable().first();\n</code></pre> <p>You'll notice I'm accessing the widget stream, then filtering on the text \"Click here to continue\", then filtering again on viewable, meaning it's currently present on screen, then returning the first one which meets this criteria.</p>"},{"location":"Development/API/Widgets/#static-widgets","title":"Static Widgets","text":"<p>In both desktop and mobile, the client contains a widget viewer which will show you a folder like structure of all the widgets and their components. This can be filtered on the text to help locate the one you need.</p> <p>Once you have your widget and component, you can refer to it in a static manner like so;</p> <pre><code>Component component = Widgets.widget(162).component(5);\n</code></pre> <p>While the code seems simpler, in the long run, it's better to use the stream as you can dynamically return the component you need. OSRS often changes internal component ID's so 162, 5, in a months time, might be 162, 8.</p>"},{"location":"Development/API/WorldHopping/","title":"World Hopping","text":"<p>World hopping is something not many people include into scripts, but for others it's a fundamental part, i.e. buying from shops.</p> <p>This page's aim to guide you through a real example of how to use the API to include world hopping into your scripts.</p> <p>Worlds can be streamed like almost every other aspect of this API. They follow the same structure as to make them familar. Like other streams, you can action directly from the stream and/or cache a reference to your stream result and action on that.</p> <p>Some examples below. <pre><code>World world = Worlds.stream().id(302).first();\n...\n...\nWorld world = Worlds.stream().filtered(w-&gt;!w.getSpecialty().equals(World.Specialty.HIGH_RISK)).first();\n...\n...\nWorld world = Worlds.stream().filtered(w-&gt;w.getPopulation()&lt;1000).first();\n</code></pre></p> <p>Now all that's left is to actually hop to it!</p> <pre><code>world.hop();\n</code></pre>"},{"location":"Development/Quirks/GroundItemInteractions/","title":"GroundItem Interactions","text":"<p>This page's aim is to walk you through different types of GroundItem interactions and how you can use them in real scenarios. Although, there's only really one scenario for ground items, and that's picking them up..</p>"},{"location":"Development/Quirks/GroundItemInteractions/#looting-specific-items","title":"Looting Specific Items","text":"<p>Previously in the Basic Fundamentals section, we talked through how to stream the GroundItems in the area.</p> <p>I've started off by declaring the items I want to loot.</p> <p><pre><code>public String[] wantedItems = {\"Cowhide\", \"Bones\", \"Raw beef\"};\n</code></pre> Now I've have them defined, I want to loot them.</p> <p><pre><code>GroundItem groundItem = GroundItems.stream().within(15).name(wantedItems).nearest().first();\nif (groundItem.inViewport()){\n    groundItem.interact(\"Take\", groundItem.name());\n}\n</code></pre> So, let's break down my filters.</p> <p>Firstly, I have within(15). This means I want all of the GroundItems within 15 tiles of my character.  This stops me from running all over the place for loot or going too far away.</p> <p>Secondly, I'm passing the names I declared earlier as an entire array to the name() filter.  This will filter the stream to any of the names in my array.</p> <p>Lastly, I use nearest() to take the one closest to me. This again helps stop me from running everywhere for loot.</p>"},{"location":"Development/Quirks/GroundItemInteractions/#spamming","title":"Spamming?","text":"<p>Don't forget to set a wait otherwise you'll spam like mad.</p> <p>Here I firstly check the count of the item on the floor. There could be 4 sets of cowhides so by checking if cowhide is empty it will get stuck waiting.</p> <pre><code>GroundItem groundItem = GroundItems.stream().within(15).name(wantedItems).nearest().first();\nif (groundItem.inViewport()) {\n    int invCount = GroundItems.stream().id(groundItem.id()).at(groundItem.Tile()).count();  \n    groundItem.interact(\"Take\", groundItem.name());\n    Condition.wait(() -&gt; GroundItems.stream().id(groundItem.id()).at(groundItem.Tile()).count() &lt; invCount, 50, 150);\n}\n</code></pre> <p>The wait I do here checks that the number of GroundItems at the tile, with the id of the item we want, is now less after I've tried to pick it up than before. This way, if the item despawns or I've looted it, it'll exit early.</p>"},{"location":"Development/Quirks/GroundItemInteractions/#im-struggling-to-interact-with-the-ground-items","title":"I'm struggling to interact with the ground items??!?!","text":"<p>Sometimes the bounds and models used in the client can often leave you struggling to accurately pick things up. I've seen many people struggling with writing something to pick up marks of grace. With them being flat on the tile I've suggested to interact with the tile itself.</p> <p>This is a little bit of a hacky work around but it works wonders some times and we start off the exact same way. We still need to find and cache our mark of grace and check that it's in the viewport.</p> <pre><code>GroundItem groundItem = GroundItems.stream().within(10).name(\"Mark of grace\").nearest().first();\nif (groundItem.inViewport()){\n\n}\n</code></pre> <p>However, there are 2 things here which will change. Firstly, we're not interacting with the item but instead we want to interact with the tile/floor like it's an object. </p> <p>The second is the wait. As marks of grace only spawn 1 at a time you can just check if it's empty.</p> <pre><code>groundItem.tile().matrix(ctx).interact(\"Take\", \"Mark of grace\");\nCondition.wait(() -&gt; GroundItems.stream().id(groundItem.id()).at(groundItem.tile()).isEmpty(), 150, 50);\n</code></pre> <p>So that makes the whole snippet:</p> <pre><code>GroundItem groundItem = GroundItems.stream().within(10).name(\"Mark of grace\").nearest().first();\nif (groundItem.inViewport()) {\n    groundItem.tile().matrix(ctx).interact(\"Take\", \"Mark of grace\");\n    Condition.wait(() -&gt; GroundItems.stream().id(groundItem.id()).at(groundItem.tile()).isEmpty(), 150, 50);\n}\n</code></pre> <p>Again, this is a work around and can often work with objects too, especially agility ones.</p>"},{"location":"Development/Quirks/InteractionTypes/","title":"Interaction Type","text":"<p>Most of the time you don't need to worry about changing interactiont types however if you notice a lot of misclicks it may be worth trying each type. Using <code>Model</code> is least preferred.</p> <p>Interaction types determine the method to calculate the bounds for an entity, the bounds is used when calculating click points. Interaction types apply to any entity which has a model:</p> <ul> <li>Npc</li> <li>Player</li> <li>Ground Item</li> <li>Game Object</li> </ul> <p>There are three different interaction types which can be used:</p> <ul> <li>HullQuick</li> <li>This uses a convex hull of the model to calculate the bounds. </li> <li>It is the default interaction type.</li> <li>It is very fast to calcluate.</li> <li>It can be inaccurate.</li> <li>Because it's fast to calculate we can calculate it right before the click is invokved, this improves clicks for interacting while moving or interacting with moving entities.</li> <li>HullAccurate</li> <li>This uses a concave hull of the model to calculate the bounds.</li> <li>It can be slow to calculate especially on larger models</li> <li>It is very accurate</li> <li>Because it's slow to calculate we can't calcuate it at click time, this means accuracy is lower when interacting while moving or interacting with moving entities.</li> <li>Model</li> <li>This uses the RS model of the entity directly (is composed of many triangles) to calcualte the bounds</li> <li>It is very fast to calculate.</li> <li>It generates click points which could be argued are less human like.</li> <li>It is usually accurate but camera position, distance etc can impact it.</li> <li>Because it's fast to calculate we can calculate it right before the click is invokved, this improves clicks for interacting while moving or interacting with moving entities.</li> </ul> <p>You can control which interaction type to use in two different places:</p> <ol> <li>When interacting with an entity</li> <li><code>goblin.interactionType(ModelInteractionType.HullAccurate).interact(\"Attack\")</code></li> <li>This will use <code>HullAccurate</code> only when interacting with the goblin at that line of code.</li> <li>Via the InteractionManager</li> <li><code>InteractionManager.setNpcInteractionType(\"Goblin\", ModelInteractionType.HullAccurate)</code></li> <li>This will use <code>HullAccurate</code> whenever interacting with a Goblin in your script unless you override the <code>interactionType</code> like in place 1.</li> </ol>"},{"location":"Development/Quirks/InventoryInteractions/","title":"Inventory Interactions","text":"<p>This page's aim is to walk you through different types of inventory interactions and how you can use them in real scenarios.</p>"},{"location":"Development/Quirks/InventoryInteractions/#eating-food","title":"Eating food","text":"<p>This is one of the most common when it comes to scripts needing the use of items. Previously in the Basic Fundamentals section, we talked through how to stream the items in the inventory. For this case, I'm going to be using lobsters.</p> <p><pre><code>String foodName = \"Lobster\";\nif (Game.tab(INVENTORY)) {\n\n}\n</code></pre> This is simply opening the inventory tab. I wrap it in an if statement as it returns true if it's already open and also true when it's finished opening it.</p> <p>So now we know the inventory is open, we need to stream our food item.</p> <pre><code>String foodName = \"Lobster\";\nif(Game.tab(INVENTORY)){\n    Item lobster = Inventory.stream().name(foodName).first();\n}\n</code></pre> <p>So, now we've filtered our inventory stream for any item with the name \"Lobster\" and then taken the first one.</p> <pre><code>String foodName = \"Lobster\";\nif (Game.tab(INVENTORY)) {\n    Item lobster = Inventory.stream().name(foodName).first();\n    lobster.interact(\"Eat\");\n}\n</code></pre> <p>Now we've added the interact(\"Eat\") which will look for the action you passed, in this case \"Eat\", and if not the first option, will look for it in the right click menu to select it.</p>"},{"location":"Development/Quirks/InventoryInteractions/#selecting-item","title":"Selecting item","text":"<p>This uses the same first step, always check your inventory is open and THEN interact.</p> <pre><code>String itemName = \"Knife\";\nif (Game.tab(INVENTORY)) {\n    Item knife = Inventory.stream().name(itemName).first();\n    knife.interact(\"Use\");\n}\n</code></pre>"},{"location":"Development/Quirks/InventoryInteractions/#combining-items","title":"Combining items","text":"<p>To combine items, for example knife on logs, you have to go through the Selecting Items steps first. However, you'll want to make sure the knife is selected before using it on the logs, so we can split this into 2 sections.</p> <p>Your inventory has a selectedItem() property which you can access like so:</p> <pre><code>Item selectedItem = Inventory.selectedItem();\n</code></pre> <p>With this, you can check things like it's index, name, id, etc. So, now we need to see if we have anything selected before we try to select the knife.</p> <p>To do so, you'll have to check the selectedItem() properties for the id() to see if it's null (-1 in this case being an integer).</p> <pre><code>Item selectedItem = Inventory.selectedItem();\nif (Inventory.selectedItem().id() == -1) {\n    system.out.println(\"Nothing selected\");\n} else {\n    system.out.println(\"Item selected: \" + selectedItem.name());\n}\n</code></pre> <p>In the above snippet, if there is nothing selected it'll print out \"Nothing selected\" otherwise it'll print out the item's name. Now it's time to bring all of these together.</p> <pre><code>String itemName = \"Knife\";\nString itemName2 = \"Oak Logs\";\nif (Game.tab(INVENTORY)) {\n    Item knife = Inventory.stream().name(itemName).first();\n    Item log = Inventory.stream().name(itemName2).first();\n    if (Inventory.selectedItem().id() == -1) {\n        knife.interact(\"Use\");\n    } else if (Inventory.selectedItem().id() == knife.id()) {\n        log.interact(\"Use\");\n    }\n}\n</code></pre>"},{"location":"Development/Quirks/InventoryInteractions/#using-items-on-objects","title":"Using items on objects","text":"<p>This again uses all of the steps above, so I'll just touch on the changes from the Combining Items section.</p> <p>Rather than a knife and log, I'll use raw lobster on a range. The only main difference is we need to use an object as our second part rather than an object.</p> <pre><code>String itemName = \"Raw lobster\";\nString objectName = \"Range\";\nif (Game.tab(INVENTORY)) {\n    Item lobster = Inventory.stream().name(itemName).first();\n    GameObject range = Objects.stream().name(objectName).first();\n    if (Inventory.selectedItem().id() == -1) {\n        lobster.interact(\"Use\");\n    } else if (Inventory.selectedItem().id() == knife.id()) {\n        range.interact(\"Use\");\n    }\n}\n</code></pre>"},{"location":"Development/Quirks/NpcInteractions/","title":"Npc Interactions","text":"<p>This page's aim is to walk you through different types of npc interactions and how you can use them in real scenarios.</p>"},{"location":"Development/Quirks/NpcInteractions/#attacking-npcs","title":"Attacking Npcs","text":"<p>A very common scenario for early game bots is combat scripts. Previously, in the Basic Fundamentals section, we talked through how to stream the npcs in the area. For this case, I'm going to be using a goblin.</p> <p>Most Npcs will have a different ID depending on their model. You can have multiple IDs for all the different goblin models out there. So, when it comes to filtering npcs I like to use names rather than IDs.</p> <pre><code>public String npcName = \"Goblin\";\n</code></pre> <p>Now I've have the name declared, lets filter them and attack the pesky goblins.</p> <pre><code>public String npcName = \"Goblin\";\nNpc goblin = Npcs.stream().name(npcName).nearest().first();\nif (goblin.inViewport()) {\n    goblin.interact(\"Attack\", npcName);\n    Condition.wait(() -&gt; !Players.local().interacting().healthBarVisible(), 150, 10);\n}\n</code></pre> <p>So, let's break down my filters.</p> <p>Firstly I have my npcName which filters to all goblins in the loaded area.</p> <p>Secondly, I use nearest() to take the one closest to me. This helps stop me running everywhere for goblins to kill.</p> <p>So, now we've filtered our npc stream for any npc that we need, and then we took the first one using first().</p>"},{"location":"Development/Quirks/NullSafety/","title":"Null Safety","text":"<p>The majority of the PowBot API is considered NullSafe. This means that when streaming for objects within the game you should not expect to receive a <code>null</code> value the API will instead return a special object to signify the absence of a value.</p>"},{"location":"Development/Quirks/NullSafety/#using-the-api","title":"Using the API","text":"<p>Example usage: <pre><code>Npc goblin = Npcs.stream().name(\"Goblin\").within(10).nearest().first()\n</code></pre></p> <p>Here we're streaming all <code>Npcs</code> and filtering them within 10 tiles where the Npcs name is <code>Goblin</code> choosing the nearest and then getting the first result. In other APIs if there were no goblins found within those conditions the variable <code>goblin</code> would be <code>null</code> but in the Powbot API this is not the case.</p> <p>When you callk first on a stream if no matches are found, the API will return an instance of <code>Npc.Nil</code> instead of <code>null</code>. The <code>Npc.Nil</code> is effectively a blank NPC object and is completely safe to call methods on, calling the methods on the class would simply return default values.</p>"},{"location":"Development/Quirks/NullSafety/#handling-nil","title":"Handling Nil","text":"<p>Here is how you can check against <code>Nil</code> values</p> <pre><code>Npc goblin = Npcs.stream().name(\"Goblin\").within(10).nearest().first()\n\nif (goblin == Npc.Nil) {\n    System.out.println(\"We couldn't find a goblin\")\n    return\n}\n</code></pre> <p>In the above snippet the code returns early if there are no goblins found. This ensures your script does not throw a <code>NullPointerException</code> if you try to call a method on a Nil goblin.</p>"},{"location":"Development/Quirks/ObjectInteractions/","title":"Object Interactions","text":"<p>This page's aim is to walk you through different types of object interactions and how you can use them in real scenarios.</p>"},{"location":"Development/Quirks/ObjectInteractions/#mining-ore","title":"Mining Ore","text":"<p>This one is a common scenario. Mining, woodcutting, and other gathering scripts are some of the most popular. Previously in the Basic Fundamentals section, we talked through how to stream the objects in the area. For this case, I'm going to be using iron ore.</p> <p>So, I've started off by declaring the ID's of the ore I want to mine. Objects change IDs usually depending on what state they're in. For example, a depleted ore is different then a ready to mine ore. An open door has a different ID then a closed door etc etc.</p> <pre><code>public static final int[] ironOre = {11364, 11365};\n</code></pre> <p>Now that I have them defined, I want to mine them.</p> <p><pre><code>GameObject rock = Objects.stream().within(2).id(ironOre).nearest().first();\nif (rock.inViewport()) {\n    rock.interact(\"Mine\", \"Rocks\");\n    Condition.wait(() -&gt; Objects.stream().at(rock.tile()).id(main.oreIDs).isEmpty(), 150, 50);\n}\n</code></pre> So, let's break down my filters.</p> <p>Firstly, I have within(2). This means I want all of the objects within 2 tiles of my character. This stops me running all over the place for iron ore.</p> <p>Secondly, I'm passing the iron ore as an entire array to the id() filter. This will filter the stream to any of the IDs in my array.</p> <p>Lastly, I use nearest() to take the one closest to me. This again helps stop me running everywhere for iron ore.</p> <p>So, now we've filtered our object stream for any object that we need, and then we took the first one using first().</p>"},{"location":"Development/Quirks/StreamAPI/","title":"Stream API","text":"<p>The stream API utilizes the Java 11's stream functionality which has been modernized and optimized so that in turn it is more cost-effective when it comes to processing power.</p> <p>There are many different streams which will be covered in the docs, but for argument sake, we're going to use the inventory stream for our example.</p> <pre><code>ItemStream items = Inventory.stream();\nItem firstItem = items.first();\n</code></pre> <p>This then streams all of the items in your inventory and will allow you to filter on those to return the desired item.</p>"},{"location":"Development/Quirks/StreamAPI/#caching","title":"Caching","text":"<p>Caching refers to the act of storing something in it's state at present to refer to later. This is used a lot in scripts to save processing the calls again.</p> <p>However, the moment you cache something it's out of date and no longer live. If you've cached an npc and the npc has moved, referring to your cachedNpc.tile() won't be the same as recalling the npc.</p> <pre><code>//non cached call\nif (Npcs.stream().name(\"Bob\").first().valid() &amp;&amp; Npcs.stream().name(\"Bob\").first().inViewport()) {\n    //execute\n}\n\n//cached call\nNpc bob = Npcs.stream().name(\"Bob\").first();\nif (bob.valid() &amp;&amp; bob.inViewport()) {\n    //execute\n}\n</code></pre> <p>In the non cached call, I'm iterating the npc stream twice for the same npc versus the cached call which iterates the npc stream once and you access the cached npc twice.</p>"},{"location":"Development/Quirks/StreamAPI/#filtering","title":"Filtering","text":"<p>The act of filtering will remove items from our stream which don't meet the criteria provided. Removing said items are the way we can filter down to a group of items which share the same criteria, e.g. all iron ore to drop. It's also the way we can filter down to a single item e.g. a knife ready to cut some logs.</p>"},{"location":"Development/Quirks/StreamAPI/#optimized-filtering","title":"Optimized Filtering","text":"<p>Filtering on the desktop client is much quicker as there is more processing power available. However, on Mobile it's a little more restricted. In turn, we need to consider how we want to filter our streams. With streams generally it's recommended to .filtered() on the stream. This is not optimal for mobile and should only be used as a last resort.</p> <p><pre><code>Inventory.stream().filtered(i -&gt; i.id() == 995).first();\n</code></pre> In this snippet I'm filtering my inventory stream to return the item which ID is 995 (coins) and then using .first() to return the first item from the stream. While this is a valid way to filter the stream, it's not optimal.</p> <p><pre><code>Inventory.stream().id(995).first();\n</code></pre> The above snippet is the optimal way. id(), name(), at(), within(), and nearest() have all been optimized to help reduce the processing power required to do the filtering, and for mobile you need optimization where possible.</p>"},{"location":"Development/Quirks/UsingWaits/","title":"Using Waits","text":"<p>This one can be controversial, some may do the same as I, some may not, but the aim is to show how you can use waits to your advantage.</p>"},{"location":"Development/Quirks/UsingWaits/#how-not-to-wait","title":"How Not to Wait!","text":"<pre><code>mineOre();\nCondition.sleep(1500);\ndropOre();\nCondition.sleep(500);\n</code></pre> <p>So I've seen this more times than I care to count. But what's actually wrong with it?</p> <p>Firstly, it creates a systematic pattern. No human will wait 1500ms every time after they've clicked an ore, nor 500ms after dropping an ore... Our knowledge of the ban detection system is that it uses patterns and profiling to help detect bots. STOP THIS.</p> <p>Also, using this means you have no validation in your timings. You could try to drop the ore before you've finished mining it. You could try to mine again before you finished mining. You could wait longer than needed because you mined in 1 tick and got lucky.</p>"},{"location":"Development/Quirks/UsingWaits/#how-then","title":"How Then?","text":"<p>Waits/Sleeps.</p> <p>These can be so much more useful than people think. I use mine as a reaction. It essentially allows me to react to the boolean dynamically rather than waiting for a fixed time.</p>"},{"location":"Development/Quirks/UsingWaits/#selecting-an-item","title":"Selecting an Item","text":"<p>Take this snippet here, someone on discord asked how to slow down the script because it was clicking on the chicken and then on the range too quickly.</p> <p>I first filter and select the raw chicken, then have a conditional wait which returns true if exited early, inside of an if-statement to then use it on the cooking pot.</p> <p><pre><code>Item rawChicken = Inventory.stream().id(Constants.RAW_CHICKEN).first();\nrawChicken.interact(\"Use\");\nif (Condition.wait(() -&gt; Inventory.selectedItem().id() == Constants.RAW_CHICKEN, 150, 10)) {\n    GameObject cookingPot = Objects.stream().id(Constants.COOKING_POT).nearest().first();\n    cookingPot.interact(\"Use\");\n}\n ```\n\nThis wait has a maximum of 1500ms, which in this scenario is a little excessive but a minimum of 150ms however if there was any lag, for example which delayed the action, this is perfect for you.\n\n### Cutting a Tree\n\nSo what happens after you click on a tree to cut it? \n* You run over to the tree\n* Your animation changes\n* Your inventory starts filling up\n* Tree dies\n\nSo, here's how I handle all of that using waits as my best friend.\n\nSo, I'll first cache the tree and then interact with it\n\n```java\nGameObject tree = Objects.stream().within(10).name(main.treeName).nearest().first();\nif (tree.inViewport()) {\n    tree.interact(\"Chop down\", main.treeName);\n    Condition.wait(() -&gt; Players.local().animation() != -1 &amp;&amp; !Players.local().inMotion(), 100, 20);\n}\n</code></pre> So, here I've added a conditional wait to check if my animation is not -1, which is the idle animation, meaning I'm cutting the tree AND I'm not in motion, meaning my ID can't be that of someone running as they would be in motion.</p> <p>So, I've handled the running over to the tree and waiting till I've started cutting the tree. So up until now, it won't spam the tree until I'm already cutting it.</p> <p>However, this is where I change it up and add the second. I now need to know if the first wait returned true, i.e. exited early because the boolean is true. If it is I want to wait until the tree is gone or my inventory is full.  If not, then I don't want to wait any longer as I may have misclicked and need to click on the tree again.</p> <pre><code>GameObject tree = Objects.stream().within(10).name(main.treeName).nearest().first();\nif (tree.inViewport()) {\n    tree.interact(\"Chop down\", main.treeName);\n    if (Condition.wait(() -&gt; Players.local().animation() != -1 &amp;&amp; !Players.local().inMotion(), 100, 20)){\n        Condition.wait(() -&gt; Objects.stream().at(tree.tile()).id(tree.id()).isEmpty() || Inventory.stream().count() == 28, 250, 20);\n    }\n}\n</code></pre> <p>So, as you can see I'm checking that the tree is now empty OR my inventory count is 28 meaning it's full. If either of these return true, I need to either find a new tree, drop the logs, or bank my logs, so I no longer want to wait.</p>"},{"location":"Development/Quirks/WidgetInteracting/","title":"Widget Interactions","text":"<p>This page's aim is to walk you through different types of widget interactions and how you can use them in real scenarios. </p> <p>What you might not know, is a lot of the API is an interface to dealing with widgets. For example your inventory and banking API is all done by using widgets.</p>"},{"location":"Development/Quirks/WidgetInteracting/#static-widgets","title":"Static Widgets","text":""},{"location":"Development/Quirks/WidgetInteracting/#getting-values","title":"Getting Values","text":"<p>Previously in the Basic Fundamentals section, we talked through static widgets and how to briefly use one.</p> <p>Static widgets have their benefits, including the speed of directly using a widget rather than having the client filter for it.</p> <p>In my MLM script I use a static widget to return the number of pay-dirt in the sack as shown in the top left corner of the screen.</p> <p>That widget is defined in my script as so; <pre><code>public Component SACK_COUNT = Widgets.widget(382).component(3).component(2);\n</code></pre> I can then in my tasks refer to the value of the text by using the following: <pre><code>Integer.parseInt(main.c.SACK_COUNT.text())&gt;10;\n</code></pre></p> <p>Again in the basic fundamentals, I spoke about some of the drawbacks to using static widgets. The main one being the fact that these component values can change. Meaning the 382, 3, 2 may in the future be 382, 4, 3. This would require me to update my script with future updates.</p>"},{"location":"Development/Quirks/WidgetInteracting/#interacting","title":"Interacting","text":"<p>Interacting with the widgets is very much the same as interacting with the rest of the games entities as the API keeps it nice and simple.</p> <p>I've defined 2 components, one is the main widget for the spell book. The second is the high alch component <pre><code>public int spellBookWidget = 218;\npublic int highAlchComponent = 38;\n</code></pre></p> <p>This means I can do the following, </p> <p>A: Check it's visible</p> <p>B: Click it</p> <p>C: Wait till the inventory is open</p>"},{"location":"Development/Quirks/WidgetInteracting/#disclaimer-theres-an-entire-magic-api-this-is-just-an-example","title":"Disclaimer, there's an entire magic API, this is just an example.","text":"<pre><code>if(Widgets.widget(spellBookWidget).component(highAlchComponent).visible()){\n    Widgets.widget(spellBookWidget).component(highAlchComponent).click();\n    Condition.wait(()-&gt;Game.tab()==Game.Tab.INVENTORY, 150, 10);\n}\n</code></pre>"},{"location":"Development/Quirks/WidgetInteracting/#component-stream-dynamic-filtering","title":"Component Stream / Dynamic Filtering","text":"<p>Here we can now use variables to return a component dynamically. This is great for future proofing your script against component changes.</p> <p>You can do this just like querying in any of the other API streams.</p> <pre><code>public int spellBookWidget = 218;\npublic int varrockSpellTexture = 27;\nif(Components.stream().widget(spellBookWidget).texture(varrockSpellTexture).viewable().isNotEmpty()){\n    Components.stream().widget(spellBookWidget).texture(varrockSpellTexture).viewable().first().click();\n}\n</code></pre> <p>Here I've checked the stream is currently not empty for a widget under 218 with the texture 27. Then we filter the stream and bring the first() forward and click it.</p>"},{"location":"Development/Quirks/WidgetInteracting/#disclaimer-theres-an-entire-magic-api-this-is-just-an-example_1","title":"Disclaimer, there's an entire magic API, this is just an example.","text":""},{"location":"Development/Script_Writers/ScriptWriterRanks/","title":"Script Writers","text":"<p>Having the script writer rank means you\u2019re part of the PowBot team and contribute to the community and library of scripts. There are a few different ranks with different perks and different requirements.</p> <p>Any script put forward for an application must be able to show a good amount of understanding for not only the API but some good standard practices in your writing. For example having  good modularity and/or the use of some OOP practices.</p> <p>There are 3 ranks available</p>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#script-writer-1","title":"Script Writer 1","text":""},{"location":"Development/Script_Writers/ScriptWriterRanks/#requirements","title":"Requirements","text":"<ul> <li>Script must not be a simple or easy script to make. Something like (but not limited to) a powerminer wouldn\u2019t suffice.  </li> <li>You must keep and maintain at least 1 public free script to retain this rank.  </li> <li>Upload to a public GitHub repo and post the link in your application. This will be reviewed and any feedback will be provided.  </li> </ul>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#benefits","title":"Benefits","text":"<ul> <li>2 free VIP instances of the client allowing you to develop without the worry of paying for your subscription.  </li> <li>SW1 Rank applied on discord.  </li> <li>The opportunity to apply for SW2.  </li> </ul>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#script-writer-2","title":"Script Writer 2","text":""},{"location":"Development/Script_Writers/ScriptWriterRanks/#requirements_1","title":"Requirements","text":"<ul> <li>All the prior SW1 requirements</li> <li>Active in the community; while it's not expected you're messaging every minute of every day, having some sort of presence in the community helps build trust from the users to the products they're ultimately going to use.</li> <li>A more complex script(s) than what we\u2019d expect for SW1. Explore more of the API and utilise it efficiently and correctly.</li> <li>You must keep and maintain at least 3+ scripts with one of these meeting the prior mentioned complexity requirement.</li> <li>Unless a valid reason is present, upload to a public GitHub repo and post the link in your application. This will be reviewed, and any feedback provided by anyone with equal or greater rank.</li> </ul>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#benefits_1","title":"Benefits","text":"<ul> <li>4 free VIP instances of the client allowing you to develop without the worry of paying for your subscription. Since you\u2019re giving more back to the community, as do we to you.</li> <li>SW2 Rank applied on discord.</li> <li>The availability to offer private script sales (You, and only you are accountable for your sales and any interactions with users; we as Pow retain the right to remove this perk at our own discretion)</li> <li>The ability to apply for premium scripts. For more details on this, please reach out to either Dan or const_</li> <li>The opportunity to apply for SW3.</li> </ul>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#script-writer-3","title":"Script Writer 3","text":""},{"location":"Development/Script_Writers/ScriptWriterRanks/#requirements_2","title":"Requirements","text":"<ul> <li>All the prior SW1 &amp; 2 requirements</li> <li>A more complex script(s) than what we\u2019d expect for SW2 and/or multiple complex scripts. Explore more of the API and utilise it efficiently and correctly.</li> <li>You must keep and maintain at least 5+ scripts with two or more of these meeting the prior mentioned complexity requirement. SW3 is where we'd be expecting our premium script writers to be although not required.</li> <li>Well integrated into the community. A reputation for timely fixes and good quality scripts.</li> <li>Unless a valid reason is present, upload to a public GitHub repo and post the link in your application. This will be reviewed, and any feedback provided by anyone with equal or greater rank.</li> </ul>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#benefits_2","title":"Benefits","text":"<ul> <li>6 free VIP instances of the client allowing you to develop without the worry of paying for your subscription. Since you\u2019re giving more back to the community, as do we to you.</li> <li>SW3 Rank applied on discord.</li> <li>The availability to offer private script sales (You, and only you are accountable for your sales and any interactions with users; we as Pow retain the right to remove this perk at our own discretion)</li> <li>The satisfaction of knowing there\u2019s no more ranks to achieve as an SW.</li> </ul>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#premium-scripts","title":"Premium Scripts","text":"<p>To apply, open a ticket in the premium-script-submission channel. Be prepared however to provide information such as the following: <pre><code>Script Title:\nProposed USD price per hour:\nA video of your script in action:\nLinks to competitor scripts on other botting sites:\nLink to the script on your Powbot git repo:\nAny additional details:\n</code></pre> Along with discussions about any further features, tweaks, possible lite versions, price point etc.</p>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#requirements_3","title":"Requirements","text":"<ul> <li>SW2 or SW3 ranks are able to apply to have a script upgraded to premium.</li> <li>Expectation to maintain said script to a higher and/or more professional standard.</li> <li>Providing service to a 'paid for' standard. We're not expecting 24/7 on-hand support, however as an example.</li> <li>User reports issue</li> <li>Waits 4 days</li> <li>SW replies - \"Client issue\"</li> <li>Does nothing</li> <li>As a customer, that's pretty poor, they've gone out of their way, to raise the issue, waited and got absolutely 0 results.</li> </ul>"},{"location":"Development/Script_Writers/ScriptWriterRanks/#benefits_3","title":"Benefits","text":"<ul> <li>Payments are managed by Pow, a hands-off approach for you.<ul> <li>70/30 (SW/Pow)</li> <li>Just a reminder, if you're not a fan, you can manage your own payments privately for 100%.</li> </ul> </li> <li>Payments made in tokens</li> <li>So the tokens a user spends on a premium script, get added to your balance (minus the 30% Pow cut).</li> <li>You can either use them, sell them for gp, crypto, feet pics etc or if you have a UK bank, you can have an invoice paid out via UKBT.</li> </ul>"},{"location":"Getting_Started/","title":"Guides","text":"<p>You can find all of our guides in the sidebar. These are all written by members of our community. If you'd like to contribute, you can create a pull request on GitHub.</p> <p>If you cannot find the guide that you're looking for, or are having issues following one or more steps of a guide, please join our Discord and ask in the #help channel.</p>"},{"location":"Getting_Started/Logging/","title":"Logging","text":"<p>We as developers and script writers are pretty much flying blind when users report issues. 99% of the time, logs help us determine what and where a script or client had an issue.</p>"},{"location":"Getting_Started/Logging/#the-easy-way-step-1","title":"The easy way; Step 1","text":"<p>Firstly; if you're trying to get the logs, I'm making the assumption you already have bluestacks open / your phone connected and running the app.</p> <p>Select the instance you want the logs for; in the screenshot below, I've selected the bottom instance.</p> <p></p>"},{"location":"Getting_Started/Logging/#the-easy-way-step-2","title":"The easy way; Step 2","text":"<p>Select the logs button</p> <p> </p>"},{"location":"Getting_Started/Logging/#the-easy-way-step-3","title":"The easy way; Step 3","text":"<p>Copy and send to whoever's asked for the logs. These logs by default will attempt to strip out any unecessary lines of junk from the below methods so might be a little more useful.</p>"},{"location":"Getting_Started/Logging/#the-manual-way-step-1-connecting-to-the-instance","title":"The manual way; Step 1 - Connecting to the instance","text":"<p>Click on the settings icon at the bottom right of your Bluestacks instance and head down to the \"Advanced tab\".</p> <p>Here you should see the following information</p> <p></p> <p>127.0.0.1 is your local host and the 5645 in the screenshot is your port. This usually starts at 5555 and goes up by 10 for each instance.</p> <p>Open up your command prompt (CMD) and paste the following commands one at a time, replacing the XXXX with the port you found from the above step.</p> <pre><code>cd \"%userprofile%\\.powbot\\android\\platform-tools\\\"\nadb connect localhost:XXXX \nadb -s localhost:XXXX logcat\n</code></pre>"},{"location":"Getting_Started/Logging/#step-2-get-the-right-logs","title":"Step 2 - Get the RIGHT logs","text":"<p>With the recent change to the native client, there's a lot more junk output into the logs that we don't need.  Using the right commands, you can strip that out and get the pertinent information only.</p> <p>Since you've already cd (changed directory) to the platform tools folder AND connected to your instance, you can just paste the following command into the same CMD window. Don't forget to swap the XXXX with your port number.</p> <pre><code>adb.exe -s localhost:XXXX\n</code></pre> <p>Ctrl+a to select it all then send it over to whoever's asked for the logs.</p>"},{"location":"Getting_Started/TransferringToJagexAccount/","title":"Transferring your account to a Jagex account.","text":""},{"location":"Getting_Started/TransferringToJagexAccount/#step-1-creating-a-new-jagex-account","title":"Step 1 - Creating a new jagex account","text":"<p>Go to this link: https://www.jagex.com/en-GB/accounts Click on 'Upgrade now and login with the RS account you want to transfer.</p>"},{"location":"Getting_Started/TransferringToJagexAccount/#step-2-accepting-the-upgrade","title":"Step 2 - Accepting the upgrade","text":"<p>Accept the prompt.</p> <p></p> <p>Type in the details of a new Jagex account you want to create. Note all of these details down.</p> <p></p> <p>Give it a name.</p> <p></p> <p>Done.</p> <p></p>"},{"location":"Getting_Started/TransferringToJagexAccount/#step-3-import-your-exisiting-rs-account","title":"Step 3 - Import your exisiting RS account","text":"<p>Once logged into your new Jagex account and on the main screen, click on 'Import existing'. </p> <p></p> <p>Login with the RS account again and accept the prompts that come up. </p> <p></p>"},{"location":"Getting_Started/TransferringToJagexAccount/#step-4-setting-up-2fa-and-getting-your-2fa-seed","title":"Step 4 - Setting up 2FA and getting your 2FA Seed","text":"<p>Go to the 'Account management' tab.</p> <p></p> <p>Under Two-step authentication, enable the the option for using an authenticator app.</p> <p></p> <p>IMPORTANT Click on the <code>Can't scan the QR Code?</code> button</p> <p></p> <p>Note down the code that shows up. This is your TOTP/2FA seed</p> <p></p> <p>Scan the QR code with an authenticator of your choice (https://authy.com/ is good for this) and continue with the steps it asks for.</p> <p>Done.</p>"},{"location":"Getting_Started/TransferringToJagexAccount/#step-5-setting-up-the-account-in-the-powbot-client","title":"Step 5 - Setting up the account in the PowBot client","text":"<p>In the account selector, be sure to paste in the TOTP/2FA seed in the corresponding field, also make sure 'Jagex account' is ticked and save.</p> <p></p>"},{"location":"Getting_Started/Proxy_Setup/Rethink/","title":"SocksTun setup","text":""},{"location":"Getting_Started/Proxy_Setup/Rethink/#step-1-download-rethink","title":"Step 1 - Download Rethink","text":"<ul> <li>Rethink APK - https://github.com/celzero/Rethink-app/releases/tag/v0.5.5n</li> </ul>"},{"location":"Getting_Started/Proxy_Setup/Rethink/#step-2-install-open-rethink","title":"Step 2 - Install &amp; open Rethink","text":"<p>This step as is as simple as dragging and dropping the APK you have downloaded previously onto the instance you want to proxy. If this is not an option, or doesn't work, there is an <code>APK</code> button on the right bar of your bluestacks/ld player instance. Once installation is complete, you should see this icon:</p> <p></p> <p>Tap on that icon to make the app open. When opening Rethink for the first time a tutorial will be presented. You can skip this by pressing skip.</p> <p></p>"},{"location":"Getting_Started/Proxy_Setup/Rethink/#step-3-adding-a-proxy","title":"Step 3 - Adding a proxy","text":"<p>Tap on the <code>Proxy</code> button. </p> <p>Tap on the <code>Setup SOCKS5 Proxy</code> option. </p> <p>Fill in your proxy credentials as shown <code>1</code>. Leave both Block UDP except DNS and NTP and Loopback proxy forwarder apps unchecked as shown <code>2</code>. Tap <code>Set</code> as shown <code>3</code>. </p> <p>When done correctly you should return to the setup page, which now looks like this. Notice that the slider is now blue/checked. </p> <p>Tap the back button which brings you to the main screen. Tap the <code>Start</code> button to activate your proxy. When you tap this button some pop-ups may appear. In order for the app to work properly, follow the instructions given by Rethink and allow connections and/or disable battery optimization. </p> <p>Nice! You have now set up Rethink to proxy all the traffic in this device/emulator through your proxy.</p>"},{"location":"Getting_Started/Proxy_Setup/Rethink/#step-4-whitelisting-ips-optional","title":"Step 4 - Whitelisting IPs (optional)","text":"<p>To save proxy data usage and use a more stable connection to Pow, it is recommended to whitelist certain IP(s) to improve the connection.</p> <p>Tap on the 'Firewall' button. </p> <p>Tap on the <code>IP &amp; Port rules</code> button. </p> <p>Tap on the <code>+</code> button. </p> <p>Fill in the IP you want to whitelist as shown <code>1</code>. Tap on <code>Bypass universal</code> as shown <code>2</code>. Then tap <code>Okay</code> to save as shown <code>3</code>. </p> <p>When done correctly, the IP will be added to the list. </p>"},{"location":"Getting_Started/Proxy_Setup/Rethink/#step-5-app-configuration-optional","title":"Step 5 - App configuration (optional)","text":"<p>If you want to only want certain apps like OSRS to be tunneled through your proxy you can use apps to configure so.</p> <p>Tap on the <code>apps</code> button. </p> <p>Tap on the plane like button and tap <code>Apply</code>. This will make it so all apps are excluded from the proxy tunnel. </p> <p>To include OSRS/Chrome into the tunnel, search for it by typing the name in the top bar. When found, tap on the app to open details. </p> <p>Tap on the <code>Bypass universal</code> button to change it to allow traffic from this application to go through your proxy. </p> <p>You need to do this for every app you want to go through the proxy. In this example OSRS will be the only app that is allowed to redirect traffic through your proxy.</p>"},{"location":"Getting_Started/Proxy_Setup/Rethink/#step-help-im-still-having-issues","title":"Step HELP - I'm still having issues","text":"<p>There could be a couple of reasons why you may be having issues. These are listed below: * Cannot connect to game - This is caused by your proxy not working correctly. Please confirm it is a working proxy and try again. Reconnecting sometimes does help. Replace your proxy if your provider allows you to. * Powbot bar does not appear - This is caused because you logged into powbot before setting up the proxy. Simply remove the game from your instance, and re-install using the latest installer (this can be found on our discord under #downloads). Make sure your proxy is on before logging into powbot/the game. * I am lost - Please join our discord and describe your issue in as much detail as you can. This will help us with helping you to troubleshoot your issue.</p>"},{"location":"Getting_Started/Proxy_Setup/SocksTun/","title":"SocksTun setup","text":""},{"location":"Getting_Started/Proxy_Setup/SocksTun/#step-1-download-sockstun","title":"Step 1 - Download SocksTun","text":"<ul> <li>SocksTun APK - https://github.com/heiher/sockstun/releases/tag/1.6</li> </ul>"},{"location":"Getting_Started/Proxy_Setup/SocksTun/#step-2-install-sockstun","title":"Step 2 - Install SocksTun","text":"<p>This step as is as simple as dragging and dropping the APK you have downloaded previously onto the instance you want to proxy. If this is not an option, or doesn't work, there is an <code>APK</code> button on the right bar of your bluestacks/ld player instance. Once installation is complete, you should see this icon:</p> <p></p>"},{"location":"Getting_Started/Proxy_Setup/SocksTun/#step-3-adding-a-proxy","title":"Step 3 - Adding a proxy","text":"<p>Open up SocksTun, and fill in the required fields with the details of your proxy. Make sure to only leave <code>IPv4</code> checked. You should end up with a setup close to this: </p>"},{"location":"Getting_Started/Proxy_Setup/SocksTun/#step-4-app-configuration","title":"Step 4 - App configuration","text":"<p>Tap on the <code>Apps</code> button. Make sure to select <code>Old School Runescape</code>. If you want to check and make sure your proxy is working, you can also choose your web browser.</p> <p></p> <p>Go back, and click on <code>Save</code> and then <code>Enable</code>.</p> <p>Your connection will now be proxied. These settings persist over restart, just make sure to wait for the <code>Connected</code> pop up before opening the game.</p>"},{"location":"Getting_Started/Proxy_Setup/SocksTun/#step-help-im-still-having-issues","title":"Step HELP - I'm still having issues","text":"<p>There could be a couple of reasons why you may be having issues. These are listed below: * Cannot connect to game - This is caused by your proxy not working correctly. Please confirm it is a working proxy and try again. Reconnecting sometimes does help. Replace your proxy if your provider allows you to. * Powbot bar does not appear - This is caused because you logged into powbot before setting up the proxy. Simply remove the game from your instance, and re-install using the latest installer (this can be found on our discord under #downloads). Make sure your proxy is on before logging into powbot/the game. * I am lost - Please join our discord and describe your issue in as much detail as you can. This will help us with helping you to troubleshoot your issue.</p>"},{"location":"Getting_Started/install/","title":"Requirements","text":"<p>Although PowBot can be installed on both emulators and real devices, the steps are slightly different. The guides will cover the different options you will have.</p> <ul> <li>Please note that PowBot does not and will never support IOS. </li> </ul>"},{"location":"Getting_Started/install/#installer-requirements","title":"Installer Requirements:","text":"<ul> <li>A PowBot account with a VIP subscription.</li> <li>A PC (Mac/Windows/Linux) with Java 11 or later installed to run the installer which will sideload the PowBot APK onto your device.<ul> <li>Java 11 links: Windows, Mac. Please make sure you reboot your PC after installing.</li> </ul> </li> <li>Able to use a device or run an android emulator which meets the requirements below.</li> </ul>"},{"location":"Getting_Started/install/#device-requirements","title":"Device Requirements:","text":"<ul> <li>Needs to be running Android 9.0+</li> <li>Needs to be running a 64-bit (ARM) version of Android.</li> <li>Must not have the game installed already (including not in any 'Secure folder' or such.).</li> </ul> <p>Be aware that you will be requiered to re-run the PowBot Installer when major updates are released. This usually happens once every 1-2 months. You will be notified in the Discord server when this happens.</p>"},{"location":"Getting_Started/install/devices/","title":"Running PowBot on an Android Device","text":"<p>As PowBot runs standalone on Android, you're able to run it on any device that supports the requirements listed earlier in the requirements page.</p>"},{"location":"Getting_Started/install/devices/#faq","title":"FAQ","text":"<p>Q: Does my device need to be plugged in all the time to run PowBot?</p> <ul> <li>No, you only need to have the device plugged in when updating PowBot. You're able to run PowBot wherever you are even without access to a PC (As long as your client is up to date).</li> </ul> <p>Q: Do I need to have a rooted device to run PowBot?</p> <ul> <li>No, you do not need to have a rooted device to run PowBot.</li> </ul> <p>Q: Can I run more than one instance of PowBot at the same time on the same device?</p> <ul> <li>No, you cannot run more than one instance of PowBot at the same time on the same device.</li> </ul> <p>Q: Can I run the PowBot Installer on my android device?</p> <ul> <li>No, the installer is made to be run on your PC. </li> </ul> <p>Q: Is enabling ADB/Developer options safe?</p> <ul> <li> <p>Yes, enabling ADB/Developer options is safe. If you are concerned about security, you can disable both options after PowBot is installed. Please note that you will not be able to pull logs from the device if you do not enable ADB.</p> </li> <li> <p>You can find more information about ADB here.</p> </li> </ul>"},{"location":"Getting_Started/install/devices/#disclaimer","title":"Disclaimer","text":"<p>Please be aware that you are responsible for your own device and we cannot be held responsible for any damage caused to it.  We recommend you to monitor your device for any heat or battery issues while running PowBot for extended periods of time.</p>"},{"location":"Getting_Started/install/devices/install/","title":"Installing PowBot on a physical device","text":"<p>Please ensure you have met the requirements in the requirements page before following the steps below.</p> <p>This guide will cover enabling Developer tools, enabling USB Debugging and installing PowBot on a physical Android device.</p>"},{"location":"Getting_Started/install/devices/install/#step-1-download-and-run-the-powbot-installer","title":"Step 1 - Download and run the PowBot Installer","text":"<p>The link to download the PowBot Installer can be found in our discord server, in the 'Downloads and setup' channel.</p> <p>Once downloaded, run the installer by double clicking it. Accept any terms and conditions that may appear.</p> <ul> <li>Please note that the installer might take a while to load on slower machines/connections, please be patient.</li> </ul> <p>Once the installer has loaded, select the <code>ADB</code> tab. You should see the following screen at this point:</p> <p></p>"},{"location":"Getting_Started/install/devices/install/#step-2-enable-usb-debugging","title":"Step 2 - Enable USB Debugging","text":"<p>On your device, go to <code>Settings</code> -&gt; <code>About phone</code> -&gt; <code>Software information</code> and find the <code>Build number</code> field. Tap on it 7 times to enable 'Developer options'. </p> <p>(If you do not see these options, it would be best to search online for your device's specific instructions.)</p> <p>You should see a popup saying <code>You are now a developer!</code>.</p> <p></p> <p>Once done, go back to the <code>Settings</code> menu and find the <code>Developer options</code> menu. Tap on it to open it. Then find the <code>USB debugging</code> option and enable it.</p> <p></p>"},{"location":"Getting_Started/install/devices/install/#step-3-connect-your-device-and-allow-usb-debugging","title":"Step 3 - Connect your device and allow USB debugging","text":"<p>Connect your device to your PC using a USB cable. You should see a popup on your device asking you to allow USB debugging. Tap on <code>Allow</code>.</p> <p></p>"},{"location":"Getting_Started/install/devices/install/#step-4-install-powbot","title":"Step 4 - Install PowBot","text":"<p>Go back to the installer and under the <code>ADB</code> tab, click the 'Refresh' button. You should see your device appear in the list with an <code>[ONLINE]</code> tag next to it.</p> <p></p> <p>Select it and click on the <code>Install</code> button. When prompted for what version to install. You're free to pick either.</p> <ul> <li>Release: The latest stable version of PowBot. This is usually the most stable version of the client to use.</li> <li>Beta: The latest beta version of PowBot. This may have new features that are not yet available in the release version, but may also have bugs.</li> </ul> <p></p> <p>Now sit back and wait for the installation to complete. Once done, you will see the game open up on your device followed shortly by the PowBot Login screen.</p> <p></p>"},{"location":"Getting_Started/install/devices/install/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>If you are having trouble getting the installer to detect your device, please ensure that you have enabled USB debugging and that your device is connected to your PC via a working USB cable.</p> </li> <li> <p>If you are still having trouble, please join our Discord server and ask for help in the <code>#help</code> channel.</p> </li> </ul>"},{"location":"Getting_Started/install/emulators/","title":"Running PowBot on an Android Emulator","text":"<p>You can run PowBot on any Android emulator that supports the requirements listed in the requirements page.</p> <p>We highly recommend you to use Bluestacks 5 or LDPlayer on a Windows machine for the best stability and performance.</p>"},{"location":"Getting_Started/install/emulators/#faq","title":"FAQ","text":"<p>Q: Can I run PowBot on a Mac?</p> <ul> <li>A: Yes, you can run PowBot on a Mac. We do not currently have any guides for this but our users have reported success using Genymotion on ARM Macs, and AVD on Intel Macs. Please join our Discord and ask in the #help channel if you need help with this.</li> </ul> <p>Q: Can I run PowBot on a Linux machine?</p> <ul> <li>A: Yes, you can run PowBot on a Linux machine but we highly do not recommend it. The only emulator that is supported is genymotion alongside a few tweaks. Performance will be very poor in comparison to both Windows and Mac.</li> </ul>"},{"location":"Getting_Started/install/emulators/bluestacks/","title":"Installing PowBot on a Bluestacks 5 instance","text":"<p>Please ensure you have met the requirements in the requirements page before following the steps below.</p> <p>This guide will cover installing bluestacks, creating a new instance and installing PowBot on it.</p>"},{"location":"Getting_Started/install/emulators/bluestacks/#step-1-download-and-run-the-powbot-installer","title":"Step 1 - Download and run the PowBot Installer","text":"<p>The link to download the PowBot Installer can be found in our discord server, in the 'Downloads and setup' channel.</p> <p>Once downloaded, run the installer by double clicking it. Accept any terms and conditions that may appear.</p> <ul> <li>Please note that the installer might take a while to load on slower machines/connections, please be patient.</li> </ul> <p>Once the installer has loaded, you will see the following screen:</p> <p></p>"},{"location":"Getting_Started/install/emulators/bluestacks/#step-2-download-and-install-bluestacks-5","title":"Step 2 - Download and install Bluestacks 5","text":"<p>Download and install Bluestacks 5 from the official website.</p> <ul> <li>Please ensure you download Bluestacks 5, not Bluestacks 4 and not Bluestacks X.</li> </ul>"},{"location":"Getting_Started/install/emulators/bluestacks/#step-3-create-a-new-instance","title":"Step 3 - Create a new instance","text":"<p>Bluestacks allows you to create multiple instances on the same machine. This is useful if you want to have multiple clients open at the same time.</p> <p>Start by opening the Bluestacks Multi-instance Manager.</p> <p></p> <p>Next, click on the <code>Instance</code> button at the bottom left.</p> <p></p> <p>Always select <code>Fresh Instance</code> when creating a new instance. This will ensure that your instance is reset to a clean state and not directly linked to any previous instances.</p> <p></p> <p>Select <code>Android 11</code> as the Android version.</p> <p></p> <p>On the next screen, ensure the following settings are selected:</p> <ul> <li>CPU Cores: Recommended is <code>2</code></li> <li>Memory allocation: Recommended is <code>2GB</code></li> <li>Resolution: Recommended is <code>960x540</code></li> <li>ABI Settings: <code>ARM</code></li> </ul> <p></p>"},{"location":"Getting_Started/install/emulators/bluestacks/#step-5-start-instance-and-enable-developer-options","title":"Step 5 - Start instance and enable developer options.","text":"<p>You should see a new instance appear in the list. Start the instance by clicking on the <code>Start</code> button.</p> <p></p> <p>Once it has loaded, go to the instance settings by clicking on the hamburger menu in the top right and selecting <code>Settings</code>.</p> <p></p> <p>Next, go the the <code>Advanced</code> tab, enable <code>Android Debug Bridge (ADB)</code> </p> <p>Please note down the address shown. In this case, it is <code>127.0.0.1:5565</code>.</p> <p>Click on <code>Save changes</code></p> <p></p>"},{"location":"Getting_Started/install/emulators/bluestacks/#step-4-connect-to-the-instance-via-adb","title":"Step 4 - Connect to the instance via ADB.","text":"<p>Open a command prompt window and run the commands below by copying and pasting them, and pressing enter after each one.</p> <pre><code>cd %userprofile%\\.powbot\\android\\platform-tools\\\n</code></pre> <pre><code>adb.exe connect 127.0.0.1:5565\n</code></pre> <p>Ensure that the address matches the one you noted down in the previous step.</p> <p>The window should look similar to this if everything was successful:</p> <p></p>"},{"location":"Getting_Started/install/emulators/bluestacks/#step-5-install-powbot","title":"Step 5 - Install PowBot","text":"<p>Go back to the installer and under the <code>ADB</code> tab, click the 'Refresh' button. You should see your instance appear in the list with an <code>[ONLINE]</code> tag next to it.</p> <p></p> <p>Select it and click on the <code>Install</code> button. When prompted for what version to install. You're free to pick either.</p> <ul> <li>Release: The latest stable version of PowBot. This is usually the most stable version of the client to use.</li> <li>Beta: The latest beta version of PowBot. This may have new features that are not yet available in the release version, but may also have bugs.</li> </ul> <p>Now sit back and wait for the installation to complete. Once done, you will see the game open up on your instance followed shortly by the PowBot Login screen.</p> <p></p>"},{"location":"Getting_Started/install/emulators/ldplayer/","title":"Installing PowBot on a LD Player instance","text":"<p>Please ensure you have met the requirements in the requirements page before following the steps below.</p> <p>This guide will cover installing LD Player, creating a new instance and installing PowBot on it.</p>"},{"location":"Getting_Started/install/emulators/ldplayer/#step-1-download-and-run-the-powbot-installer","title":"Step 1 - Download and run the PowBot Installer","text":"<p>The link to download the PowBot Installer can be found in our discord server, in the 'Downloads and setup' channel.</p> <p>Once downloaded, run the installer by double clicking it. Accept any terms and conditions that may appear.</p> <ul> <li>Please note that the installer might take a while to load on slower machines/connections, please be patient.</li> </ul> <p>Once the installer has loaded, you will see the following screen:</p> <p></p>"},{"location":"Getting_Started/install/emulators/ldplayer/#step-2-download-and-install-ld-player","title":"Step 2 - Download and install LD Player","text":"<p>Download and install LD Player 9 from the official website.</p> <ul> <li>Please ensure you download LD Player 9 and not any other version.</li> <li>Make sure to restart your PC after installing.</li> </ul>"},{"location":"Getting_Started/install/emulators/ldplayer/#step-3-create-a-new-instance","title":"Step 3 - Create a new instance","text":"<p>LD Player allows you to create multiple instances on the same machine. This is useful if you want to have multiple clients open at the same time.</p> <p>Start by opening the LD Player Multi-instance Manager and click on the <code>Add Instance</code> button in the bottom right of the window, followed by <code>New Instance</code>.</p> <p></p> <p>Select <code>Android 9.0 (64-bit)</code> as the Android version.</p> <p></p> <p>Now go into the newly created instance settings</p> <p></p> <p>On the <code>Advanced</code> tab, ensure the following settings are selected:</p> <ul> <li>Resolution: Recommended is <code>960x540</code></li> <li>CPU: Recommended is <code>2 cores</code></li> <li>RAM: Recommended is <code>2GB</code> / <code>2048mb</code></li> <li>Shared Disk: <code>System.vmdk writable</code></li> </ul> <p></p> <p>On the <code>Other settings</code> tab, ensure the following settings are selected:</p> <ul> <li>Enable ADB: <code>Enabled</code></li> </ul> <p></p>"},{"location":"Getting_Started/install/emulators/ldplayer/#step-4-start-instance-and-install-powbot","title":"Step 4 - Start instance and install PowBot","text":"<p>Start the instance by clicking on the <code>Start</code> button. Wait until the instance has fully booted up.</p> <p></p> <p>Go back to the installer and under the <code>ADB</code> tab, click the <code>Refresh</code> button. You should see your instance appear in the list with an <code>[ONLINE]</code> tag next to it.</p> <p></p> <p>Select it and click on the <code>Install</code> button. When prompted for what version to install. You're free to pick either.</p> <ul> <li>Release: The latest stable version of PowBot. This is usually the most stable version of the client to use.</li> <li>Beta: The latest beta version of PowBot. This may have new features that are not yet available in the release version, but may also have bugs.</li> </ul> <p>Now sit back and wait for the installation to complete. Once done, you will see the game open up on your instance followed shortly by the PowBot Login screen.</p> <p></p>"},{"location":"Help_And_Support/temp/","title":"Work in progress","text":"<p>You can find direct support in our discord server</p>"},{"location":"scripts/scripts_md/Farmer/","title":"RuneScape Farming Automation Script Overview","text":""},{"location":"scripts/scripts_md/Farmer/#description","title":"Description","text":"<p>This script automates tasks for the Farming skill in RuneScape, handling planting, harvesting, and managing crops across all types of patches. It is designed to work on Android devices using the PowBot SDK.</p>"},{"location":"scripts/scripts_md/Farmer/#features","title":"Features","text":"<ul> <li>Versatile Patch Handling: Works with herb, flower, allotment, fruit tree, tree, hops, and bush patches.</li> <li>Inventory Management: Ensures all required items are present before starting a farm run.</li> <li>Efficient Navigation: Uses the SDK's pathfinding to walk between patches or teleport when possible.</li> <li>Smart Harvesting: Harvests crops and uses the magic leprechaun to note items when the inventory is full.</li> <li>NPC Interaction: Trades with gardeners for crop protection and handles other necessary NPC interactions.</li> <li>POH Support: POH traversal are supported</li> </ul>"},{"location":"scripts/scripts_md/Farmer/#safety-measures","title":"Safety Measures","text":"<ul> <li>Implements waits and random intervals to mimic human behavior.</li> <li>Avoids patterns that could lead to detection and potential bans.</li> </ul>"},{"location":"scripts/scripts_md/Farmer/#requirements","title":"Requirements","text":"<ul> <li>Android device or Sim with the PowBot mobile client installed.</li> <li>Membership in RuneScape for access to the Farming skill.</li> <li>Necessary farming tools, seeds, and other items as per the Farming guide.</li> </ul>"},{"location":"scripts/scripts_md/Farmer/#usage","title":"Usage","text":"<p>Before starting the script, ensure all required items are in the bank or inventory. Configure the script with your preferred settings, and start the script. The bot will handle the rest, navigating through the game and performing farming tasks efficiently.</p>"},{"location":"scripts/scripts_md/Open%20Abyss/","title":"Open Abyss","text":"<p>Crafts runes using the abyss. </p>"},{"location":"scripts/scripts_md/Open%20Abyss/#instructions","title":"Instructions","text":"<ul> <li>Start with gear you do not mind using, there is no death support.<ul> <li>Chronicle - Must be equipped in hand.</li> </ul> </li> <li>House must have mounted glory <ul> <li>For optimal speed ensure it is close to entrance portal</li> <li>For optimal speed remove house doors in configuration.</li> <li>For faster banking put food/potions/essence in the same tab/row</li> </ul> </li> </ul>"},{"location":"scripts/scripts_md/Open%20Abyss/#features","title":"Features","text":"<ul> <li>Chronicle support</li> <li>House teleport(Runes)</li> <li>House teleport(Tablets)</li> <li>Ring of dueling / Ferox</li> <li>Phoenix necklace</li> </ul>"},{"location":"scripts/scripts_md/Opentodt/","title":"Open Abyss","text":"<p>Does the wintertodt minigame. </p>"},{"location":"scripts/scripts_md/Opentodt/#instructions","title":"Instructions","text":"<ul> <li>Start with warm gear equipped.</li> </ul>"},{"location":"scripts/scripts_md/Opentodt/#features","title":"Features","text":"<ul> <li>Fletching/Logs only</li> <li>Idle on 500 points</li> <li>Exp cramming(Dumps rest of logs/fletch when low time left)</li> <li>Opens crates before banking</li> <li>Upgrades warm gear before banking(Requires open crates before banking)</li> </ul>"},{"location":"scripts/scripts_md/Pow%20Tutorial/","title":"Pow Tutorial","text":"<p>A script that completes tutorial island from start to finish</p>"},{"location":"scripts/scripts_md/PowChickens/","title":"PowChickens","text":"<p>A simple script that kills chickens in a variety of locations. Loots feathers and optionally raw chicken. Can also loot and bury bones.</p>"},{"location":"scripts/scripts_md/PowChickens/#supported-locations","title":"Supported locations","text":"<ul> <li>Draynor</li> <li>Lumbridge</li> </ul>"},{"location":"scripts/scripts_md/PowConstruction/","title":"PowConstruction","text":"<p>Begin with the following in your inventory:</p> <ul> <li>Noted planks</li> <li>Nails</li> <li>Hammer</li> <li>Saw</li> <li>GP for exchanging bank notes</li> </ul> <p>Credits to PTY and Coma for helping create this</p>"},{"location":"scripts/scripts_md/PowCows/","title":"PowCows","text":"<p>This script kills cows, loots cow hides and optionally raw beef. Can also loot and bury bones. Automatically banks at the nearest bank to your chosen location.</p>"},{"location":"scripts/scripts_md/PowCows/#supported-locations","title":"Supported locations","text":"<ul> <li>Draynor/Lumbridge</li> <li>Lumbridge</li> <li>Falador</li> </ul>"},{"location":"scripts/scripts_md/PowGoblins/","title":"PowChickens","text":"<p>A simple script that kills chickens in a variety of locations. Loots feathers and optionally raw chicken. Can also loot and bury bones.</p>"},{"location":"scripts/scripts_md/PowGoblins/#supported-locations","title":"Supported locations","text":"<ul> <li>Draynor</li> <li>Lumbridge</li> </ul>"},{"location":"scripts/scripts_md/PowPestControl/","title":"PowPestControl","text":"<p>Start geared up</p> <ul> <li>Select boat to use</li> <li>Select activity (Recommended: Mix)</li> </ul>"},{"location":"scripts/scripts_md/PowPlanker/","title":"PowPlanker","text":"<p>Create planks from logs in Varrock, supports the following types of planks:</p> <ul> <li>Plank</li> <li>Oak Plank</li> <li>Mahogany Plank</li> <li>Teak Plank</li> </ul> <p>Please provide feedback here.</p>"},{"location":"scripts/scripts_md/PowPlanker/#progress-reports","title":"Progress Reports","text":""},{"location":"scripts/scripts_md/PowRunecrafter/","title":"PowRunecrafter - Runecrafting Bot for OSRS","text":"<p>This is <code>PowRunecrafter</code>, a free <code>Runecrafting Bot</code> for the OldSchool RuneScape skill Runecrafting. It allows you to automatically level up your Runecrafting in OSRS so you can focus on something more fun. Upon starting the script, simply select which F2P runes you want to craft, and have either a talisman in your inventory or a tiara equipped.</p> <p>It's important to note this script only supports F2P crafting methods at this time (hence the name), so no Abyss or anything fancy like that. The script supports all F2P altars, and can work with both talisman and tiara. </p> <p>If you have any feedback, let me know in the forum thread linked to below.</p> <p>Happy runecrafting!</p>"},{"location":"scripts/scripts_md/PowRunecrafter/#air-runes","title":"Air runes","text":"<ul> <li>Start the script at Falador East Bank</li> <li>Have an Air talisman in your inventory or an Air tiara equipped</li> <li>Have Rune essence or Pure essence in your bank, either will work</li> </ul>"},{"location":"scripts/scripts_md/PowRunecrafter/#mind-runes","title":"Mind runes","text":"<ul> <li>Start the script at Falador West Bank</li> <li>Have an Mind talisman in your inventory or an Mind tiara equipped</li> <li>Have Rune essence or Pure essence in your bank, either will work</li> </ul>"},{"location":"scripts/scripts_md/PowRunecrafter/#mind-runes_1","title":"Mind runes","text":"<ul> <li>Start the script at Falador West Bank</li> <li>Have an Mind talisman in your inventory or an Mind tiara equipped</li> <li>Have Rune essence or Pure essence in your bank, either will work</li> </ul>"},{"location":"scripts/scripts_md/PowRunecrafter/#water-runes","title":"Water runes","text":"<ul> <li>Start the script at Draynor Village Bank</li> <li>Have a Water talisman in your inventory or a Water tiara equipped</li> <li>Have Rune essence or Pure essence in your bank, either will work</li> </ul>"},{"location":"scripts/scripts_md/PowRunecrafter/#earth-runes","title":"Earth runes","text":"<ul> <li>Start the script at Varrock East Bank</li> <li>Have a Earth talisman in your inventory or a Earth tiara equipped</li> <li>Have Rune essence or Pure essence in your bank, either will work</li> </ul>"},{"location":"scripts/scripts_md/PowRunecrafter/#fire-runes-temporary-disabled-web-update-required","title":"Fire runes - temporary disabled, web update required","text":"<ul> <li>Start the script at Duel Arena bank</li> <li>Have a Fire talisman in your inventory or a Fire tiara equipped</li> <li>Have Rune essence or Pure essence in your bank, either will work</li> </ul>"},{"location":"scripts/scripts_md/PowRunecrafter/#having-problems-with-this-script","title":"Having problems with this script?","text":"<p>Report them on the forum thread</p>"},{"location":"scripts/scripts_md/Proto%20Zulrah/","title":"testing new maybe works 19/05/2024","text":""},{"location":"scripts/scripts_md/Simple%20Agility/","title":"Simple Agility","text":""},{"location":"scripts/scripts_md/Simple%20Agility/#supports","title":"Supports","text":"<ul> <li>Rooftop courses</li> <li>High Alchemy</li> </ul> <p>If you want to request another area/method or report a bug feel free to post on the thread, and I will take a look. More information helps find the issues.</p>"},{"location":"scripts/scripts_md/Simple%20Crafter/","title":"Simple Fisher","text":""},{"location":"scripts/scripts_md/Simple%20Crafter/#supports","title":"Supports","text":"<ul> <li>Leather</li> </ul> <p>If you want to request another area/method or report a bug feel free to post on the thread and I will take a look. More information helps find the issues/</p>"},{"location":"scripts/scripts_md/Simple%20Fisher/","title":"Simple Fisher","text":""},{"location":"scripts/scripts_md/Simple%20Fisher/#supports","title":"Supports","text":"<ul> <li>Small Fishing Net</li> <li>Big Fishing Net</li> <li>Fishing Rod</li> <li>Fly Fishing</li> <li>Harpoon</li> <li>Lobsters </li> <li>Minnows</li> <li>Trawler(Beta)</li> <li>Aerial</li> </ul>"},{"location":"scripts/scripts_md/Simple%20Fisher/#locations","title":"Locations","text":"<ul> <li>Aerial</li> <li>Al-Kharid</li> <li>Barbarian Village + Cooking</li> <li>Catherby</li> <li>Draynor</li> <li>Fishing Guild</li> <li>Karamja (Draynor+Deposit box banking)</li> <li>Lumbridge River</li> <li>Lumbridge Swamp </li> <li>Ottos  </li> <li>Minnows</li> <li>Shilo Village</li> <li>Trawler </li> </ul> <p>If you want to request another area/method or report a bug feel free to post on the thread and I will take a look. More information helps find the issues/</p>"},{"location":"scripts/scripts_md/Simple%20Fletching/","title":"Simple Fletcher","text":""},{"location":"scripts/scripts_md/Simple%20Fletching/#supports","title":"Supports","text":"<ul> <li>Crafting logs</li> </ul> <p>If you want to request another area/method or report a bug feel free to post on the thread and I will take a look. More information helps find the issues.</p>"},{"location":"scripts/scripts_md/krul%20BlastFurnace/","title":"BlastFurnace","text":"<p>Smelts bars in the Blast Furnace</p>"},{"location":"scripts/scripts_md/krul%20BlastFurnace/#features","title":"Features","text":"<ul> <li>Bars: Gold, Iron, Steel, Mithril, Adamantite, Runite</li> <li>Coal bag</li> <li>Ice/Gold gloves switching</li> <li>Cooling dispenser with Bucket of water and Ice gloves</li> <li>Puts gold in coffer and pays foreman</li> <li>Stamina potions</li> </ul>"},{"location":"scripts/scripts_md/krul%20BlastFurnace/#options","title":"Options","text":"<ul> <li>Select bar to smelt</li> </ul>"},{"location":"scripts/scripts_md/krul%20ColorFinder/","title":"AIO Miner","text":"<p>Mines any ore anywhere on Runescape and banks at nearest bank. </p>"},{"location":"scripts/scripts_md/krul%20ColorFinder/#features","title":"Features","text":"<ul> <li>Custom selection of any rock you want to mine.</li> <li>Supports Motherlode mine (upper &amp; lower level).</li> <li>Supports Amethysts.</li> <li>Supports Calcified rocks.</li> <li>Supports Soft Clay rocks</li> <li>Bank or powermine, fast or slow.</li> <li>Recognizes if others have mined your rock.</li> <li>Empties gem bag when bank is opened.</li> <li>Can hop from nearby players.</li> <li>Supports Deposit Boxes and Mine Carts (prif).</li> </ul>"},{"location":"scripts/scripts_md/krul%20ColorFinder/#options","title":"Options","text":"<ul> <li>List of rocks/veins/amethysts selected to watch for ore.</li> <li>Drop ores to skip banking and powermine.</li> <li>Fast mining removes the random delay before clicking next rock.</li> <li>Set center position with radius to 1 for powermining on 1 tile.</li> <li>Hop from players checks if another player is within your mining area for 2.5 seconds before hopping.</li> </ul>"},{"location":"scripts/scripts_md/krul%20ColorFinder/#motherlode-mine","title":"Motherlode mine","text":"<p>If you want to use the upper level in the motherlode mine, just walk up the ladder and after you're standing up there \" Interact with GameObjects\" to make a selection of veins on the upper level that you want to mine.</p>"},{"location":"scripts/scripts_md/krul%20ColorFinder/#adding-new-rocks","title":"Adding new rocks","text":"<p>If the rock you want to mine does not work, please run 'krul ColorFinder' and stand in front of the rock while facing it. There should be a modColor field with a number changing when you mine the rock. Please send me a screenshot with the info while the rock is mineable.</p>"},{"location":"scripts/scripts_md/krul%20Combiner/","title":"AIO Runescape Combiner","text":"<p>Can Cook, Craft, Fletch, Herblore, Smith, Smelt and Tan any item in Runescape. </p>"},{"location":"scripts/scripts_md/krul%20Combiner/#features","title":"Features","text":"<ul> <li>Supports combining from inventory (using two or more items together).</li> <li>Supports combining through GameObjects (Anvil, Furnace, Stove, Tan-Npc etc).</li> </ul>"},{"location":"scripts/scripts_md/krul%20Combiner/#set-up","title":"Set-up","text":""},{"location":"scripts/scripts_md/krul%20Fighter/","title":"AIO Fighter","text":"<p>Fights any monster anywhere</p>"},{"location":"scripts/scripts_md/krul%20Fighter/#features","title":"Features","text":"<ul> <li>Eating</li> <li>Drinking potions</li> <li>QuickPray</li> <li>Banking (with teleports)</li> <li>Looting (ironman support)</li> <li>Bury bones</li> <li>High alching</li> <li>Safespotting</li> <li>Magic &amp; Ranged</li> <li>Warrior guild re-entering for defender</li> <li>Stop after finishing slayer task</li> <li>Kills superiors (does not avoid projectiles)</li> </ul>"},{"location":"scripts/scripts_md/krul%20Fighter/#options","title":"Options","text":"<ul> <li>Retrieve inventory that you want to go to Npcs with</li> <li>Retrieve equipment that you want to go to Npcs with</li> <li>Interact with npcs you want to kill</li> <li>Select safespot (or not)</li> <li>With safespot disabled the script will use the current player's tile as centertile</li> <li>Select radius in which npcs may be attacked from safe-/centerspot</li> <li>Select nearest or any bank by preference</li> </ul>"},{"location":"scripts/scripts_md/krul%20Fighter/#foods-supported","title":"Foods supported","text":"<p>Just have them in inventory when retrieving the inventory</p> <ul> <li>Shrimp</li> <li>Meat</li> <li>Cakes</li> <li>Meat pie</li> <li>Plain/Meat/Anchovy/Pineapple Pizza</li> <li>Trout</li> <li>Salmon</li> <li>Peach</li> <li>Tuna</li> <li>Wine</li> <li>Lobster</li> <li>Bass</li> <li>Swordfish</li> <li>Potato &amp; Cheese</li> <li>Monkfish</li> <li>Shark</li> <li>Karambwan</li> </ul>"},{"location":"scripts/scripts_md/krul%20Fighter/#potions-supported","title":"Potions supported","text":"<p>Just have them in inventory when retrieving the inventory</p> <ul> <li>Energy</li> <li>Super energy</li> <li>Stamina</li> <li>(divine) Ranged, (divine) Bastion</li> <li>Combat, Attack, Strength, Defence (+super variants) (+divine variants)</li> <li>Prayer (QuickPray is turned on during combat if these are taken)</li> <li>Antipoison, Super antipoison</li> </ul>"},{"location":"scripts/scripts_md/krul%20Fighter/#setup","title":"Setup","text":""},{"location":"scripts/scripts_md/krul%20Fighter/#without-safespot","title":"Without safespot","text":""},{"location":"scripts/scripts_md/krul%20Fighter/#with-safespot-older-ui","title":"With safespot (older UI)","text":""},{"location":"scripts/scripts_md/krul%20Miner/","title":"AIO Miner","text":"<p>Mines any ore anywhere on Runescape and banks at nearest bank. </p>"},{"location":"scripts/scripts_md/krul%20Miner/#features","title":"Features","text":"<ul> <li>Custom selection of any rock you want to mine.</li> <li>Supports Motherlode mine (upper &amp; lower level).</li> <li>Supports Amethysts.</li> <li>Supports Calcified rocks.</li> <li>Supports Soft Clay rocks</li> <li>Bank or powermine, fast or slow.</li> <li>Recognizes if others have mined your rock.</li> <li>Empties gem bag when bank is opened.</li> <li>Can hop from nearby players.</li> <li>Supports Deposit Boxes and Mine Carts (prif).</li> </ul>"},{"location":"scripts/scripts_md/krul%20Miner/#options","title":"Options","text":"<ul> <li>List of rocks/veins/amethysts selected to watch for ore.</li> <li>Drop ores to skip banking and powermine.</li> <li>Fast mining removes the random delay before clicking next rock.</li> <li>Set center position with radius to 1 for powermining on 1 tile.</li> <li>Hop from players checks if another player is within your mining area for 2.5 seconds before hopping.</li> </ul>"},{"location":"scripts/scripts_md/krul%20Miner/#motherlode-mine","title":"Motherlode mine","text":"<p>If you want to use the upper level in the motherlode mine, just walk up the ladder and after you're standing up there \" Interact with GameObjects\" to make a selection of veins on the upper level that you want to mine.</p>"},{"location":"scripts/scripts_md/krul%20Miner/#adding-new-rocks","title":"Adding new rocks","text":"<p>If the rock you want to mine does not work, please run 'krul ColorFinder' and stand in front of the rock while facing it. There should be a modColor field with a number changing when you mine the rock. Please send me a screenshot with the info while the rock is mineable.</p>"},{"location":"scripts/scripts_md/krul%20Orbs/","title":"Fishing trawler","text":"<p>Does the fishing trawler minigame. </p>"},{"location":"scripts/scripts_md/krul%20Orbs/#instructions","title":"Instructions","text":""},{"location":"scripts/scripts_md/krul%20Orbs/#features","title":"Features","text":""},{"location":"scripts/scripts_md/krul%20Orbs/#options","title":"Options","text":""},{"location":"scripts/scripts_md/krul%20Runecrafter/","title":"krul Runecrafter","text":"<p>Crafts runes at Abyss, Astral or ZMI altar. Optimal setup for Astral/ZMI is having Dust staff and rune pouch filled with required runes. </p>"},{"location":"scripts/scripts_md/krul%20Runecrafter/#features","title":"Features","text":"<ul> <li>Astral Altar</li> <li>ZMI/Ourania Altar</li> <li>Fills&amp;Repairs pouches</li> <li>Teleports to Moonclan/Ourania</li> <li>Drinks stamina / Casts Vile Vigour / Sips from PoH pool</li> <li>Eats food</li> <li>Teleports from players attacking me in wilderness</li> </ul>"},{"location":"scripts/scripts_md/krul%20Runecrafter/#requirements","title":"Requirements","text":"<ul> <li>Npc Contact runes</li> <li>37 Prayer for Protect from Magic (ZMI)</li> <li>96 magic for Vile Vigour (Swap spellbook) (ZMI)</li> <li>Moonclan teleport runes (Astral)</li> <li>Teleport to house runes (Abyss)</li> </ul>"},{"location":"scripts/scripts_md/krul%20Smelter/","title":"krul Smelter","text":"<p>Smelts any bar or cannonballs. </p>"},{"location":"scripts/scripts_md/krul%20Smelter/#features","title":"Features","text":"<ul> <li>Any bar type</li> <li>Calculates best inventory</li> <li>Cannonball support</li> </ul>"},{"location":"scripts/scripts_md/krul%20Smither/","title":"krul Smither","text":"<p>Smiths anything from any bar. </p>"},{"location":"scripts/scripts_md/krul%20Smither/#features","title":"Features","text":"<ul> <li>Select bar and item to smith</li> </ul>"},{"location":"scripts/scripts_md/krul%20Tempoross/","title":"Tempoross Minigame","text":"<p>Plays the Tempoross minigame for points or XP. </p>"},{"location":"scripts/scripts_md/krul%20Tempoross/#features","title":"Features","text":"<ul> <li>Automatically picks up a rope and tether to poles when waves come in.</li> <li>Picks up and fills buckets with water to douse flames that are in its path.</li> <li>Prioritizes killing the spirit.</li> <li>Special attack with dragon harpoon.</li> <li>Skips picking up rope if full spirit angular is worn.</li> </ul>"},{"location":"scripts/scripts_md/krul%20Tempoross/#options","title":"Options","text":"<ul> <li>Cooking fish grants more points at the cost of XP</li> </ul>"},{"location":"scripts/scripts_md/krul%20Thiever/","title":"krul Thiever","text":"<p>Thieves any NPC customizable</p>"},{"location":"scripts/scripts_md/krul%20Thiever/#features","title":"Features","text":"<ul> <li>Supports Banking</li> <li>Supports Eating</li> <li>Supports Dodgy necklace</li> </ul>"},{"location":"scripts/scripts_md/krul%20Tithe/","title":"Tithe Farming Minigame","text":"<p>Does the Tithe Farming mini-game in Zeah. </p>"},{"location":"scripts/scripts_md/krul%20Tithe/#instructions","title":"Instructions","text":"<ul> <li>Make sure to have enough Watering Cans to water a complete growth cycle without having to refill + one extra cycle<ul> <li>This means that for 18 patches you need 9 cans</li> <li>18 (patches) * 3 (cycles) + 18 (extra cycle) = 72 water portions</li> <li>8 portions per can means 72 / 8 =&gt; 9 Watering Cans</li> <li>Just have 20 Watering cans to be sure...</li> </ul> </li> <li>Have single-tap disabled</li> <li>If you set <code>Patches</code> to 16, it will do 17 the first 4 rounds</li> <li>Make sure to close all interfaces other than Inventory<ul> <li>Chat &amp; the interfaces on the left of the screen have to be closed for this script to properly work.</li> </ul> </li> </ul>"},{"location":"scripts/scripts_md/krul%20Tithe/#features","title":"Features","text":"<ul> <li>All seeds</li> </ul>"},{"location":"scripts/scripts_md/krul%20Tokens/","title":"Warrior's Guild Tokens","text":"<p>Collects tokens in the Warrior's Guild. </p>"},{"location":"scripts/scripts_md/krul%20Tokens/#armour","title":"Armour","text":"<p>Just have them in inventory when retrieving</p> <ul> <li>Black, Mithril, Adamant, Rune</li> </ul>"},{"location":"scripts/scripts_md/krul%20Tokens/#foods-supported","title":"Foods supported","text":"<p>Just have them in inventory when retrieving</p> <ul> <li>Shrimp</li> <li>Cakes</li> <li>Trout</li> <li>Salmon</li> <li>Peach</li> <li>Tuna</li> <li>Wine</li> <li>Lobster</li> <li>Bass</li> <li>Swordfish</li> <li>Potato &amp; Cheese</li> <li>Monkfish</li> <li>Shark</li> <li>Karambwan</li> </ul>"},{"location":"scripts/scripts_md/krul%20Woodcutter/","title":"AIO Woodcutter","text":"<p>Chops any tree anywhere on Runescape and banks at nearest bank. </p>"},{"location":"scripts/scripts_md/krul%20Woodcutter/#features","title":"Features","text":"<ul> <li>Select trees by clicking on them.</li> <li>Bank, drop or burn logs.</li> <li>Picks bird nest if banking</li> <li>Recognizes if others have chopped your tree.</li> </ul>"}]}